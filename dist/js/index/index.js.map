{"version":3,"sources":["infra/github/IssueRepositoryImpl.ts","infra/github/IssueRepositoryDummy.ts","infra/github/CommentRepositoryImpl.ts","infra/github/CommentRepositoryDummy.ts","domain/TaskSummary.ts","infra/tasksummary/MilestoneFactory.ts","infra/tasksummary/TaskSummaryImpl.ts","domain/TaskNote.ts","infra/tasknote/TaskNoteRepositoryImpl.ts","domain/TaskTree.ts","domain/task.ts","TaskListFactory.ts","service/TitleOnlyToMangedService.ts","service/UpdateNoteBodyService.ts","service/CreateEmptyNoteService.ts","index.ts","../../../../../../usr/local/lib/node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"index.js","sourceRoot":"../../../src","sourcesContent":["import {IssueRepository} from '../../domain/github/IssueRepository'\ndeclare var GitHub: any;\n\nexport class IssueRepositoryImpl implements IssueRepository {\n  private issueMap;// cache\n  private gh: any;\n  private issues: any;\n  constructor(\n    githubToken: string, \n    owner: string, \n    repo: string\n  ) {\n    this.gh = new GitHub({token: githubToken});\n    this.issues = this.gh.getIssues(owner, repo)\n  }\n  refresh(cb: (err?, list?: Array<any>)=>void) {\n    this.issues.listIssues({state: 'all'}, (error, list) => {\n      if(error) {\n        cb(error, null);\n        return;\n        // alert(error);\n        // throw error;\n      }\n      this.issueMap = {};\n      list.forEach(v => this.setIssue(v))\n      console.log(list);\n      return cb(null, list);\n    });\n  }\n\n  private setIssue(issueObj) {\n    this.issueMap[issueObj.number] = issueObj;\n  }\n\n  private cb(cb, err, obj) {\n    if(err) {\n      cb(err);\n    }\n    this.setIssue(obj);\n    cb(null, obj);\n  }\n\n  getIssue(issueNumber: number): any {\n    return this.issueMap[issueNumber];\n  }\n\n  updateTitle(issueNumber: number, title: string, callback: (err, obj) => any) {\n    this.issues.editIssue(issueNumber, {title: title}, (err, obj) => this.cb(callback, err, obj)) \n  }\n\n  updateBody(issueNumber: number, body: string, callback: (err, obj) => any) {\n    this.issues.editIssue(issueNumber, {body: body}, (err, obj) => this.cb(callback, err, obj)) \n  }\n\n  createIssue(issue: {title: string, body: string}, callback: (err, obj) => any) {\n    this.issues.createIssue(issue, (err, obj) => this.cb(callback, err, obj));\n  }\n}","import {IssueRepository} from '../../domain/github/IssueRepository'\nexport class IssueRepositoryDummy implements IssueRepository {\n  private issueNumberSeq = 1000;\n  private map = {};\n  constructor(readonly taskRootIssueNumber: number) {\n\n  }\n  refresh(callback: (err?, list?: Array<any>)=>void) {\n    setTimeout(() => callback(), 100);\n  }\n  getIssue(issueNumber: number): any {\n    if(!this.map[issueNumber]) {\n      if(issueNumber == this.taskRootIssueNumber) {\n        this.map[issueNumber] = { body: text }\n      } else if(issueNumber == 5) {\n        this.map[issueNumber] = { body: body_5_done }\n      } else if(issueNumber == 27) {\n        this.map[issueNumber] = { body: body27 }\n      } else {\n        this.map[issueNumber] = { body: body26 };\n      }\n      \n    }\n    return this.map[issueNumber];\n  }\n  updateTitle(issueNumber: number, title: string, callback: (err?, obj?) => any) {\n\n  }\n  updateBody(issueNumber: number, body: string, callback: (err?, obj?) => any) {\n    this.map[issueNumber].body = body;\n    setTimeout(() => callback(null, this.map[issueNumber]), 100);\n  }\n  createIssue(issue: {title: string, body: string}, callback: (err?, obj?) => any) {\n    this.issueNumberSeq++;\n    this.map[this.issueNumberSeq] = {\n      number: this.issueNumberSeq,\n      title: issue.title,\n      body: issue.body\n    };\n    setTimeout(() => callback(null, this.map[this.issueNumberSeq]), 100);\n    \n  }\n}\n\nvar text = `\n- 学業\n  - 宿題\n    - [5月分](/26)\n    - 6月分\n- 遊び\n  - [日本旅行](/5)\n  - [世界一周](/27)\n`.trim()\n\nvar body26 = `\n### 担当: すずき\n### 関係者: さとう\n### DONEの定義: 終わらす\n### マイルストーン\n2020/06/06 始まりの儀\n7/9 終わりの儀\n### 開始日: 2020/05/11\n### 終了日: 2020/05/29\n### 内容\n5/28にやる\n頑張る\n### リンク:\n- [yahoo](http://www.yahoo.co.jp)\n`.trim();\n\nvar body27 = `\n### 担当: すずき\n### 関係者: さとう\n### DONEの定義: いつか\n### マイルストーン: \n### 開始日: 2021/05/11\n### 終了日: 2021/05/29\n### 内容\n世界一周する\n頑張る\n### リンク:\n`.trim();\n\n\nvar body_5_done = `\n### 担当: たなか\n### 関係者:\n### DONEの定義: 行く\n### マイルストーン: \n### 開始日: 2020/05/11\n### 終了日: 2020/05/29\n### 内容\n全国一周\n### リンク:\n### 完了: 2020/05/29\n`.trim();","import {CommentRepository} from '../../domain/github/CommentRepository'\ndeclare var GitHub: any;\n// var gh = new GitHub({token: config.githubToken});\n// const issue = gh.getIssues(config.owner, config.repo)\n// var root = null;\n\n// function createRoot(issueObject) {\n//   return issueObject;\n// }\n\n// class ReefTask {\n  \n// }\n\n\n\nexport class CommentRepositoryImpl implements CommentRepository {\n  private issueCommentsMap = {};\n  private gh: any;\n  private issues: any;\n  private repo: any;\n  constructor(\n    githubToken: string, \n    owner: string, \n    repo: string\n  ) {\n    this.gh = new GitHub({token: githubToken});\n    this.issues = this.gh.getIssues(owner, repo)\n    this.repo = this.gh.getRepo(owner, repo);\n  }\n  getCommentsForIssue(issueNumber: number) {\n    if(!this.issueCommentsMap[issueNumber]) {\n      return [];\n    }\n    return Object.values(this.issueCommentsMap[issueNumber]);\n  }\n  refreshNewestUpdateComments(since: Date | null, callback: (err?, list?: any) => any) {\n    var loopCount = 0;\n    var lastId = -1;\n    var loop = (err, list) => {\n      \n      if(err) {\n        callback(err);\n        return;\n      }\n      loopCount++;\n      console.log(loopCount);\n      console.log(list);\n      if(loopCount > 30) throw '無限'\n\n      if(!list) {\n        this.repo.listComments({sort: 'updated', direction: 'asc', since: since}, loop)\n      } else if(list.length > 0) {\n        this.updateCache(list);\n        if(lastId != list[list.length - 1].id) {\n          lastId = list[list.length - 1].id;\n          this.repo.listComments({sort: 'updated', direction: 'asc', since: list[list.length - 1].updated_at}, loop)\n        } else {\n          callback(err, this.issueCommentsMap)\n        }\n        \n      } else {\n        callback(err, this.issueCommentsMap)\n      }\n    }\n    loop(null, null);\n  }\n  create(issueNumber: number, body: string, callback: (err?, obj?) => void) {\n    this.issues.createIssueComment(issueNumber, body, (err?, obj?) => {\n      if(err) {\n        callback(err);\n        return;\n      }\n      this.issueCommentsMap[issueNumber][obj.id] = obj;\n      callback(null, obj);\n    })\n  }\n  update(issueNumber: number, id: number, body: string, callback: (err?, obj?) => void) {\n    this.issues.editIssueComment(id, body, (err, obj) => {\n      if(err) {\n        callback(err);\n        return;\n      }\n      this.issueCommentsMap[issueNumber][id] = obj;\n      callback(null, obj);\n    })\n  }\n  private updateCache(comments: any[]) {\n    comments.forEach(c => {\n      var issueNumber = CommentRepositoryImpl.getIssueNumber(c);\n      if(!this.issueCommentsMap[issueNumber]) {\n        this.issueCommentsMap[issueNumber] = {};\n      }\n      this.issueCommentsMap[issueNumber][c.id] = c;\n    })\n  }\n  static getIssueNumber(comment) {\n    var result = parseInt(comment.html_url.slice(comment.html_url.lastIndexOf('/') + 1).split('#')[0]);\n    return result;\n  }\n}","import {CommentRepository} from '../../domain/github/CommentRepository'\ndeclare var GitHub: any;\n// var gh = new GitHub({token: config.githubToken});\n// const issue = gh.getIssues(config.owner, config.repo)\n// var root = null;\n\n// function createRoot(issueObject) {\n//   return issueObject;\n// }\n\n// class ReefTask {\n  \n// }\n\n\n\nexport class CommentRepositoryDummy implements CommentRepository {\n  private issueCommentsMap = {}\n  constructor() {\n\n  }\n\n  getCommentsForIssue(issueNumber: number) {\n    if(!this.issueCommentsMap[issueNumber]) {\n      this.issueCommentsMap[issueNumber] = [{id: 0, body: '2020/1/1\\n---\\nあああ'}]\n    }\n    return this.issueCommentsMap[issueNumber];\n  }\n  refreshNewestUpdateComments(since: Date | null, callback: (err?, list?: any[]) => any) {\n    setTimeout(() => callback(null, []), 300);\n  }\n  update(issueNumber: number, id: number, body: string, callback: (err?, obj?) => void) {\n    this.issueCommentsMap[issueNumber][id].body = body;\n    setTimeout(() => callback(null, this.issueCommentsMap[issueNumber][id]), 100);\n  }\n  create(issueNumber: number, body: string, callback: (err?, obj?) => void) {\n    var id = this.issueCommentsMap[issueNumber].length;\n    this.issueCommentsMap[issueNumber].push({id: id, body: body})\n    // console.log(this.issueCommentsMap[issueNumber]);\n    setTimeout(() => callback(null, this.issueCommentsMap[issueNumber][this.issueCommentsMap[issueNumber].length - 1]), 100);\n  }\n}","import { TaskId } from \"./TaskId\";\n\nexport interface TaskSummaryIF {\n  taskId: TaskId;\n  issueNumber: number;\n  isDone: boolean;\n  isBeforeStartDate: boolean;\n  isAfterEndDate: boolean;\n  isInStartEnd: boolean;\n  milestones: Milestones;\n  assign: string;\n  related: string;\n  goal: string;\n  startDate?: DateInTask;\n  endDate?: DateInTask;\n  completeDate?: DateInTask;\n  description: string;\n  links: {title: string, path: string, isHttp: boolean}[];\n}\n\nexport class TaskSummary implements TaskSummaryIF {\n  taskId: TaskId;\n  issueNumber: number;\n  isDone: boolean;\n  isBeforeStartDate: boolean;\n  isAfterEndDate: boolean;\n  isInStartEnd: boolean;\n  milestones: Milestones;\n  assign: string;\n  related: string;\n  goal: string;\n  startDate?: DateInTask;\n  endDate?: DateInTask;\n  completeDate?: DateInTask;\n  description: string;\n  links: {title: string, path: string, isHttp: boolean}[]\n  constructor(org: TaskSummaryIF) {\n    this.taskId = org.taskId;\n    this.issueNumber = org.issueNumber;\n    this.isDone = org.isDone;\n    this.isBeforeStartDate = org.isBeforeStartDate;\n    this.isAfterEndDate = org.isAfterEndDate;\n    this.isInStartEnd = org.isInStartEnd;\n    this.milestones = org.milestones;\n    this.assign = org.assign;\n    this.related = org.related;\n    this.goal = org.goal;\n    this.startDate = org.startDate;\n    this.endDate = org.endDate;\n    this.completeDate = org.completeDate;\n    this.description = org.description;\n    this.links = org.links;\n  }\n\n  updateMilestones(milestones: Milestones): TaskSummary {\n    var result = new TaskSummary(this);\n    result.milestones = milestones;\n    return result;\n  }\n  updateAssign(assign: string): TaskSummary {\n    var result = new TaskSummary(this);\n    result.assign = assign;\n    return result;\n  }\n  updateGoal(goal: string): TaskSummary {\n    var result = new TaskSummary(this);\n    result.goal = goal;\n    return result;\n  }\n  updateCompleteDate(completeDate: DateInTask) {\n    var result = new TaskSummary(this);\n    result.completeDate = completeDate;\n    return result;\n  }\n\n\n}\n\n/*\n### 担当: \n### 関係者: \n### DONEの定義: \n### マイルストーン: \n### 開始日: \n### 終了日: \n### 内容: \n### リンク:\n*/\n\nexport class Milestone {\n  readonly isDone: boolean;\n  constructor(\n    public dateInTask: DateInTask, \n    public title: string,\n    private now: Date\n  ) {\n    this.isDone = ['done', '完了', '了', '済', '済み'].some(key => this.title.indexOf(`[${key}]`) != -1);\n  }\n  get dateText(): string {\n    return this.dateInTask.text;\n  }\n  \n  isWithin(pastDate: Date): boolean {\n    if(this.isDone) {\n      return false;\n    }\n    return this.dateInTask.isWithin(pastDate);\n  }\n  get isWithinOneWeek(): boolean {\n    return this.isWithin(new Date(this.now.getTime() + 7 * 24 * 60 * 60 * 1000));\n  }\n  contains(text: string): boolean {\n    return this.title.indexOf(text) != -1 || this.dateInTask.text.indexOf(text) != -1;\n  }\n}\n\nexport class Milestones {\n  constructor(readonly list: Milestone[]) {\n  }\n  contains(text: string): boolean {\n    return this.list.some(v => v.contains(text))\n  }\n}\n\nexport class DateInTask {\n  readonly date: Date;\n  constructor(public text: string, date: Date) {\n    this.date = new Date(date.toLocaleDateString());\n  }\n  isWithin(pastDate: Date): boolean {\n    return this.date.getTime() <= pastDate.getTime();\n  }\n  // TODO: ドメイン層にあるべきでない\n  static create(dateText: string, now: Date): DateInTask {\n    var parts = dateText.split('/').map(v => parseInt(v));\n    if(parts.length == 2) {// ex 6/23\n      parts = [(parts[0] <= 3 ? now.getFullYear() + 1: now.getFullYear()), ...parts]\n    }\n    var date = new Date(parts.join('/'));\n    return new DateInTask(dateText, date);\n  }\n}\n\nexport interface TaskSummaryRepository {\n  getSummary(num: TaskId, now: Date): TaskSummary;\n  create(event: CreateTaskSummaryEvent, cb: (err?, issueNumber?: number)=>void)\n  update(summary: TaskSummary, cb: (err?)=>void)\n}\nexport class CreateTaskSummaryEvent {\n  constructor(readonly title: string) {}\n}","import { DateInTask, Milestone, Milestones } from \"../../domain/TaskSummary\";\nexport class MilestoneFactory {\n  // パターン\n  // 2020/1/1 タスク名\n  // 2020/1/1　タスク名全角区切り\n  // 1/1 タスク名\n  // タスク名 ほげ\n  // 1/末 タスク名\n  static create(text: string, now: Date): Milestone {\n    var splitKey = ' ';\n    if (text.indexOf(splitKey) == -1) {\n      splitKey = '　';\n      if (text.indexOf(splitKey) == -1) {\n        // throw `マイルストーンがパースできない ${text}`\n        var title = text;\n        return new Milestone(new DateInTask('', new Date('2999/12/31')), title, now);\n      }\n    }\n    var dateText = text.slice(0, text.indexOf(splitKey));\n    var title = text.slice(text.indexOf(splitKey)).trim();\n    return new Milestone(DateInTask.create(dateText, now), title, now);\n  }\n  static createMilestones(text: string, now: Date): Milestones {\n    return new Milestones(text.split('\\n').map(v => v.trim()).filter(v => v.length > 0).map(v => MilestoneFactory.create(v, now)));\n  }\n}\n","import { TaskSummaryIF, TaskSummary, DateInTask, CreateTaskSummaryEvent, TaskSummaryRepository } from \"../../domain/TaskSummary\";\nimport { IssueRepository } from \"../../domain/github/IssueRepository\";\nimport { TaskId } from \"../../domain/TaskId\";\nimport { MilestoneFactory } from \"./MilestoneFactory\";\nexport class DateInTaskFactory {\n  static create(dateText: string, now: Date): DateInTask {\n    var parts = dateText.split('/').map(v => parseInt(v));\n    if(parts.length == 2) {// ex 6/23\n      parts = [(parts[0] <= 3 ? now.getFullYear() + 1: now.getFullYear()), ...parts]\n    }\n    var date = new Date(parts.join('/'));\n    return new DateInTask(dateText, date);\n  }\n}\n\nexport class TaskSummaryRepositoryImpl implements TaskSummaryRepository {\n  constructor(private issueRepository: IssueRepository) {\n}\n\n  /**\n   * issueをsummaryに変換\n   * @param issue \n   */\n  static convert(issue, taskId: TaskId, now: Date): TaskSummary {\n    // bodyをパース\n    var obj = issue.body.split('### ').slice(1).map(v => {\n      var first = v.split('\\n')[0];\n      var key = first.trim();\n      if(first.indexOf(':') != -1) {\n        key = first.split(':')[0].trim();\n      }\n      var value = v.slice(key.length + 1).trim();\n      return {key: key, value: value}\n    }).reduce((memo, v) => {\n      memo[v.key] = v.value;\n      return memo;\n    }, {})\n\n    // md形式のリンクリストをパース\n    obj['リンク'] = obj['リンク'].split('\\n').filter(v => v.length > 0).map(v => {\n      if(v.indexOf('[') == -1) {\n        return {title: v, path: v, isHttp: false};\n      }\n      v = v.slice(v.indexOf('[') + 1);\n      var ary = v.split('](');\n      var title = ary[0];\n      var path = ary[1].slice(0, ary[1].length - 1);\n      return {title: title, path: path, isHttp: path.indexOf('http') == 0};\n    })\n    obj.links = obj['リンク']\n\n    obj.isDone = obj['完了'] && obj['完了'].trim().length > 0;\n\n    obj.milestones = MilestoneFactory.createMilestones(obj['マイルストーン'], now)\n\n    /*\n    milestones: Milestones,\n    assign: string,\n    related: string,\n    goal: string,\n    startDate: DateInTask,\n    endDate: DateInTask,\n    description: string,\n    links: []\n    */\n    \n    obj.assign = obj['担当']\n    obj.related = obj['関係者']\n    obj.goal = obj['DONEの定義']\n    obj.description = obj['内容']\n    obj.startDate = obj['開始日'].length > 0 ? DateInTaskFactory.create(obj['開始日'], now) : null\n    obj.endDate = obj['終了日'].length > 0 ? DateInTaskFactory.create(obj['終了日'], now) : null\n    obj.completeDate = obj['完了'] && obj['完了'].length > 0 ? DateInTaskFactory.create(obj['完了'], now) : null\n    // issue番号\n    obj.issueNumber = issue.number || taskId;\n    obj.taskId = issue.number || taskId;\n\n    obj.isBeforeStartDate = obj.startDate && obj.startDate.date.getTime() >= now.getTime()\n    obj.isAfterEndDate = obj.endDate && obj.endDate.date.getTime() < now.getTime()\n    obj.isInStartEnd = !obj.isBeforeStartDate && !obj.isAfterEndDate;\n\n    return new TaskSummary(obj as TaskSummaryIF);\n  }\n\n  getSummary(num: TaskId, now: Date): TaskSummary {\n    if(num <= 0) {\n      throw '不正な番号'\n    }\n    // 担当,関係者,完了,DONEの定義,マイルストーン,開始日,終了日,内容,リンク\n    var issue = this.issueRepository.getIssue(num);\n    var s = TaskSummaryRepositoryImpl.convert(issue, num, now);\n    return s;\n  }\n\n  create(event: CreateTaskSummaryEvent, cb: (err?, issueNumber?: number)=>void) {\n    var body = `\n### 担当: \n### 関係者: \n### DONEの定義: \n### マイルストーン: \n### 開始日: \n### 終了日: \n### 内容: \n### リンク:\n### 完了:\n`.trim();\n\n    this.issueRepository.createIssue({title: event.title, body: body}, (err, obj) => {\n      if(err) {\n        cb(err);\n        return;\n      }\n      cb(null, obj.number)\n    })\n  }\n\n  update(summary: TaskSummary, cb: (err?)=>void) {\n    var map = TaskSummaryRepositoryImpl.toMap(summary);\n    var text = Object.keys(map).map(k => {\n      var value = map[k];\n      if(value && value.split('\\n').length >= 2) {\n        return `### ${k}\\n${value}`\n      } else if(value && value.indexOf('- ') == 0) {\n        return `### ${k}\\n${value}`\n      }\n      return `### ${k}: ${value}`;\n    }).join('\\n')\n    console.log(text);\n    this.issueRepository.updateBody(summary.taskId, text, cb);\n  }\n\n  static toMap(summary: TaskSummary) {\n    return {\n      '担当': summary.assign,\n      '関係者': summary.related,\n      'DONEの定義': summary.goal, \n      'マイルストーン': summary.milestones.list.map(v => `${v.dateText} ${v.title}`).join('\\n'),\n      '開始日': summary.startDate ? summary.startDate.text : '',\n      '終了日': summary.endDate ? summary.endDate.text : '',\n      '内容': summary.description,\n      'リンク':summary.links.map(v => `- [${v.title}](${v.path})`).join('\\n'),\n      '完了': summary.completeDate ? summary.completeDate.text : ''\n    };\n  }\n}","import { TaskId } from \"./TaskId\";\n\nexport class Note {\n  constructor(readonly taskId: TaskId, readonly id: number, readonly date: Date, readonly body: string) {}\n  updateBody(body: string): UpdateNoteEvent {\n    return new UpdateNoteEvent(this.taskId, this.id, this.date, body);\n  }\n}\nexport class Notes {\n  constructor(readonly taskId: TaskId, readonly list: Note[]) {}\n  get latestNote(): Note | null {\n    return this.list.length > 0 ? this.list[0] : null;\n  }\n  createEmptyNote(now: Date): CreateEmptyNoteEvent {\n    var date = new Date(now);\n    date.setDate(date.getDay() == 0 ? date.getDate() - 6 : date.getDate() - date.getDay() + 1);// 月曜日\n    date = new Date(date.toDateString());\n    if(this.latestNote && this.latestNote.date.getTime() == date.getTime()) {\n      throw '既に最新のノートがある';\n    }\n\n    return new CreateEmptyNoteEvent(this.taskId, date);\n  }\n}\n\nexport interface TaskNoteRepository {\n  getNotes(taskId: TaskId): Notes;\n  update(event: UpdateNoteEvent, cb: (err)=>void)\n  createEmptyNote(event: CreateEmptyNoteEvent, cb: (err)=>void);\n}\n\nexport class UpdateNoteEvent {\n  constructor(readonly taskId: TaskId, readonly id: number, readonly date: Date, readonly body: string) {}\n}\n\nexport class CreateEmptyNoteEvent {\n  constructor(readonly taskId: TaskId, readonly date: Date) {}\n}\n","import { CommentRepository } from \"../../domain/github/CommentRepository\";\nimport { Note, Notes, TaskNoteRepository, UpdateNoteEvent, CreateEmptyNoteEvent } from \"../../domain/TaskNote\";\nimport { TaskId } from \"../../domain/TaskId\";\n\nexport class TaskNoteRepositoryImpl implements TaskNoteRepository {\n  constructor(private commentRepository: CommentRepository) {\n\n  }\n\n  static convert(id, body): {id, date: string, body: string, commentBody: string} | null {\n    if(body.indexOf('---') == -1) {\n      return null;\n    }\n    return {\n      id: id,\n      date: body.slice(0, body.indexOf('---')).trim(),\n      body: body.slice(body.indexOf('---') + '---'.length).trim(),\n      commentBody: body\n    };\n  }\n  static createCommentText(date: Date, body: string) {\n    return `${date.toLocaleDateString()}\\n---\\n${body.trim()}`;\n  }\n\n  getNotes(taskId: TaskId): Notes {\n    if(taskId <= 0) {\n      throw '不正な番号'\n    }\n    // 担当,関係者,完了,DONEの定義,マイルストーン,開始日,終了日,内容,リンク\n    var notes: Note[] = this.commentRepository.getCommentsForIssue(taskId)\n      .map(v => TaskNoteRepositoryImpl.convert(v.id, v.body))\n      .filter(v => v)\n      .map(v => new Note(taskId, v.id, new Date(v.date), v.body))\n      .sort((a, b) => {\n        a = a.date.getTime();\n        b = b.date.getTime();\n        if(a == b) return 0;\n        if(a > b) return -1;\n        if(a < b) return 1;\n      });// exclude null\n    // return [{date: '2020/1/1', body: 'hoge'}];\n\n    return new Notes(taskId, notes);\n  }\n  \n  update(event: UpdateNoteEvent, cb: (err)=>void) {\n    this.commentRepository.update(event.taskId, event.id, TaskNoteRepositoryImpl.createCommentText(event.date, event.body), (err, obj) => {\n      cb(err);\n    })\n  }\n\n  createEmptyNote(event: CreateEmptyNoteEvent, cb: (err)=>void) {\n    this.commentRepository.create(event.taskId, TaskNoteRepositoryImpl.createCommentText(event.date, ''), (err, obj) => {\n      cb(err);\n    })\n  }\n}","import { IssueRepository } from \"./github/IssueRepository\";\nimport { TaskId } from \"./TaskId\";\n\nexport class TreeNode<T> {\n  public package: T[] = [];\n  constructor(readonly value: T, readonly children: TreeNode<T>[] = []) {}\n  get hasChildren(): boolean {\n    return this.children.length > 0;\n  }\n  get lastChild(): TreeNode<T> {\n    if(!this.hasChildren) throw 'no children';\n    return this.children[this.children.length - 1];\n  }\n  addChild(node: TreeNode<T>) {\n    node.package = [...this.package, this.value]\n    this.children.push(node);\n  }\n}\n\nexport class TaskTitleAndId {\n  constructor(readonly title: string, readonly taskId?: TaskId) {}\n}\n\nfunction convertToTree(text): TreeNode<TaskTitleAndId> {\n  var root = new TreeNode<TaskTitleAndId>(new TaskTitleAndId('_root'));\n  var lastNodes: TreeNode<TaskTitleAndId>[] = [root];\n  text.trim().split('\\n').forEach((line: string) => {\n    var nest = line.split('-')[0].length / 2 + 1;//1 origin\n    var node = new TreeNode<TaskTitleAndId>(textToTaskTitleAndId(line.trim().slice(2)));\n    lastNodes[nest] = node;\n    lastNodes[nest - 1].addChild(node);\n  });\n  return root;\n}\n\nfunction textToTaskTitleAndId(text) {\n  if(text.indexOf('[') != 0) {\n    return new TaskTitleAndId(text);\n  }\n  var ary = text.split('/');\n  var taskId = parseInt(ary[ary.length - 1].split(')')[0]) as TaskId;\n  var title = text.split(']')[0].slice(1);\n  return new TaskTitleAndId(title, taskId)\n}\n\n\nexport class TaskTreeRepository {\n  constructor(private taskRootIssueNumber: number, private issueRepository: IssueRepository) {\n  }\n\n  getTaskTree(): TreeNode<TaskTitleAndId> {\n    var taskRootText = this.issueRepository.getIssue(this.taskRootIssueNumber).body\n    return convertToTree(taskRootText);\n  }\n  getTaskRootBody() {\n    return this.issueRepository.getIssue(this.taskRootIssueNumber).body\n  }\n  updateTaskRootBody(taskRootBody, cb:(err?)=>void) {\n    this.issueRepository.updateBody(this.taskRootIssueNumber, taskRootBody, cb);\n  }\n  updateTaskTitleAndId(taskTitleAndId: TaskTitleAndId, cb:(err?)=>void) {\n    var rootBody = this.getTaskRootBody().split(taskTitleAndId.title).join(`[${taskTitleAndId.title}](./${taskTitleAndId.taskId})`)\n    this.updateTaskRootBody(rootBody, cb);\n  }\n}","import { TaskSummary, CreateTaskSummaryEvent } from \"./TaskSummary\"\nimport { TaskId } from \"./TaskId\";\nimport { Note } from \"./TaskNote\";\n\nexport interface TaskIf {\n  title: string;\n  isNode: boolean;\n  isTitleOnly: boolean;\n  isManaged: boolean;\n  nest: string;\n}\n\nexport class NodeTask implements TaskIf {\n  isNode: boolean = true;\n  isTitleOnly: boolean = false;\n  isManaged: boolean = false;\n  status = 'opened';\n\n  constructor(\n    public title: string,\n    public children: Array<NodeTask | TitleOnlyTask | ManagedTask>,\n    public nest: string\n  ) {}\n}\n\nexport class TitleOnlyTask implements TaskIf {\n  isNode: boolean = false;\n  isTitleOnly: boolean = true;\n  isManaged: boolean = false;\n\n  constructor(\n    public title: string,\n    public nest: string,\n    readonly packages: string[]\n  ) {}\n  toMangedTask(): CreateTaskSummaryEvent {\n    return new CreateTaskSummaryEvent(this.title);\n  }\n}\n\nexport class ManagedTask implements TaskIf {\n  readonly isNode: boolean = false;\n  readonly isTitleOnly: boolean = false;\n  readonly isManaged: boolean = true;\n\n  readonly isDone: boolean;\n  readonly isBeforeStartDate: boolean;\n  readonly isAfterEndDate: boolean;\n  readonly latestNoteText: string;\n  \n  constructor(\n    readonly taskId: TaskId,\n    readonly title: string,\n    readonly summary: TaskSummary,\n    readonly latestNote: Note | null,\n    public nest: string,\n    readonly packages: string[]\n  ) {\n    this.isDone = summary.isDone;\n    this.isBeforeStartDate = summary.isBeforeStartDate;\n    this.isAfterEndDate = summary.isAfterEndDate;\n    this.latestNoteText = latestNote ? `${latestNote.date}\\n${latestNote.body}` : ''\n  }\n}\n","import { NodeTask, TitleOnlyTask, ManagedTask } from './domain/task';\nimport { TaskSummaryRepository } from './domain/TaskSummary';\nimport { TaskNoteRepository } from './domain/TaskNote';\nimport { TreeNode, TaskTitleAndId, TaskTreeRepository } from './domain/TaskTree';\n\nexport class TaskListFactory {\n  constructor(private taskSummaryRepository: TaskSummaryRepository, private taskNoteRepository: TaskNoteRepository, private taskTreeRepository: TaskTreeRepository, private now: Date) { }\n  create(): Array<NodeTask | TitleOnlyTask | ManagedTask> {\n    var tree = this.taskTreeRepository.getTaskTree();\n    return this.flat(this.treeNodeToTask(tree, -1)).slice(1);\n  }\n  private treeNodeToTask(node: TreeNode<TaskTitleAndId>, nestNum: number = 0): NodeTask | TitleOnlyTask | ManagedTask {\n    var title = node.value.title;\n    var nest = `nest${nestNum}`;\n    if (node.value.taskId) { // managed\n      return new ManagedTask(node.value.taskId, title, this.taskSummaryRepository.getSummary(node.value.taskId, this.now), this.taskNoteRepository.getNotes(node.value.taskId).latestNote, nest, node.package.map(v => v.title));\n    }\n    else if (node.hasChildren) {\n      return new NodeTask(title, node.children.map(v => this.treeNodeToTask(v, nestNum + 1)), nest);\n    }\n    else {\n      return new TitleOnlyTask(title, nest, node.package.map(v => v.title));\n    }\n  }\n  private flat(task: NodeTask | TitleOnlyTask | ManagedTask, list: (NodeTask | TitleOnlyTask | ManagedTask)[] = []): Array<NodeTask | TitleOnlyTask | ManagedTask> {\n    list.push(task);\n    if (task.isNode) {\n      (task as NodeTask).children.forEach(v => this.flat(v, list));\n    }\n    return list;\n  }\n}\n","import { TitleOnlyTask } from '../domain/task';\nimport { TaskSummaryRepository } from '../domain/TaskSummary';\nimport { TaskId } from '../domain/TaskId';\nimport { TaskTreeRepository, TaskTitleAndId } from '../domain/TaskTree';\nexport class TitleOnlyToMangedService {\n  constructor(\n    private taskSummaryRepository: TaskSummaryRepository, \n    private taskTreeRepository: TaskTreeRepository\n  ) {}\n  \n  convert(titleOnlyTask: TitleOnlyTask, cb: (err?) => void) {\n    var event = titleOnlyTask.toMangedTask();\n    this.taskSummaryRepository.create(event, (err, issueNumber) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.taskTreeRepository.updateTaskTitleAndId(new TaskTitleAndId(event.title, issueNumber as TaskId), cb);\n    });\n  }\n}\n","import { Note, TaskNoteRepository } from '../domain/TaskNote';\n\nexport class UpdateNoteBodyService {\n  constructor(private taskNoteRepository: TaskNoteRepository) { }\n  update(note: Note, body: string, cb: (err?) => void) {\n    var event = note.updateBody(body);\n    this.taskNoteRepository.update(event, cb);\n  }\n}\n","import { TaskId } from '../domain/TaskId';\nimport { TaskNoteRepository } from '../domain/TaskNote';\nexport class CreateEmptyNoteService {\n  constructor(\n    private taskNoteRepository: TaskNoteRepository, \n    private now: Date\n  ) { }\n  \n  create(taskId: TaskId, cb: (err?) => void) {\n    var event = this.taskNoteRepository.getNotes(taskId).createEmptyNote(this.now);\n    this.taskNoteRepository.createEmptyNote(event, cb);\n  }\n}\n","/// <reference path=\"./sugar.d.ts\" />\nimport {NodeTask, TaskIf, TitleOnlyTask, ManagedTask} from './domain/task'\nimport {IssueRepository} from './domain/github/IssueRepository'\nimport {IssueRepositoryImpl} from './infra/github/IssueRepositoryImpl'\nimport {IssueRepositoryDummy} from './infra/github/IssueRepositoryDummy'\nimport {CommentRepository} from './domain/github/CommentRepository'\nimport {CommentRepositoryImpl} from './infra/github/CommentRepositoryImpl'\nimport {CommentRepositoryDummy} from './infra/github/CommentRepositoryDummy'\nimport { TaskSummaryRepository, TaskSummary, Milestones, Milestone, DateInTask } from './domain/TaskSummary'\nimport { TaskSummaryRepositoryImpl } from './infra/tasksummary/TaskSummaryImpl'\nimport { TaskId } from './domain/TaskId'\nimport { Note, Notes, TaskNoteRepository } from './domain/TaskNote'\nimport { TaskNoteRepositoryImpl } from './infra/tasknote/TaskNoteRepositoryImpl'\nimport { TaskTreeRepository } from './domain/TaskTree'\nimport { TaskListFactory } from './TaskListFactory'\nimport { TitleOnlyToMangedService } from './service/TitleOnlyToMangedService'\nimport { UpdateNoteBodyService } from './service/UpdateNoteBodyService'\nimport { CreateEmptyNoteService } from './service/CreateEmptyNoteService'\nimport { MilestoneFactory } from './infra/tasksummary/MilestoneFactory'\ndeclare var Vue: any;\ndeclare var config: { \n  githubToken: string, \n  owner: string, \n  repo: string,\n  taskRootIssueNumber: number ,\n  isDevelop:boolean\n}\n\ntype EditingText = {\n  milestones: string;\n  isEditingMilestones: boolean;\n  assign: string;\n  isEditingAssign: boolean;\n  goal: string;\n  isEditingGoal: boolean;\n  completeDateText: string,\n  isEditingCompleteDateText\n}\n\nclass Services {\n  constructor(\n    readonly titleOnlyToMangedService: TitleOnlyToMangedService,\n    readonly updateNoteBodyService: UpdateNoteBodyService,\n    readonly createEmptyNoteService: CreateEmptyNoteService\n  ) {}\n}\n\n\n(() => {\n  var issueRepository: IssueRepository;\n  var commentRepository: CommentRepository;\n  \n  issueRepository = new IssueRepositoryImpl(\n    config.githubToken,\n    config.owner,\n    config.repo\n  );\n  commentRepository = new CommentRepositoryImpl(\n    config.githubToken,\n    config.owner,\n    config.repo\n  );\n  if(config.isDevelop) {\n    issueRepository = new IssueRepositoryDummy(config.taskRootIssueNumber);\n    commentRepository = new CommentRepositoryDummy();\n  }\n\n  const taskSummaryRepository: TaskSummaryRepository = new TaskSummaryRepositoryImpl(issueRepository);\n  const taskNoteRepository: TaskNoteRepository = new TaskNoteRepositoryImpl(commentRepository);\n  const taskTreeRepository: TaskTreeRepository = new TaskTreeRepository(config.taskRootIssueNumber, issueRepository)\n\n  issueRepository.refresh((err) => {\n    if(err) {\n      alert(err);\n      throw err;\n    }\n    commentRepository.refreshNewestUpdateComments(new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), (err, obj) => {\n      if(err) {\n        alert(err);\n        throw err;\n      }\n      setup(\n        taskSummaryRepository, \n        taskNoteRepository, \n        taskTreeRepository,\n        new Date());\n    });\n  })\n})()\n\n\nfunction setup(\n  taskSummaryRepository: TaskSummaryRepository, \n  taskNoteRepository: TaskNoteRepository,\n  taskTreeRepository: TaskTreeRepository,\n  now: Date\n  ) {\n  var taskListFactory = new TaskListFactory(taskSummaryRepository, taskNoteRepository, taskTreeRepository, now);\n  var tasks = taskListFactory.create().map(v => {\n    if(!v.isManaged) {\n      return v;\n    }\n    v = v as ManagedTask;\n    var obj = v as any;// vue用に変更\n    obj.editingMilestonesText = v.summary.milestones.list.map(v => `${v.dateText} ${v.title}`).join('\\n');\n    (v as any).isEditingMilestones = false;\n    \n    return obj;\n  })\n  var callbackToReload = (err?) => {\n    if(err) throw err;\n    app.reload();\n  }\n  var services = new Services(\n    new TitleOnlyToMangedService(taskSummaryRepository, taskTreeRepository),\n    new UpdateNoteBodyService(taskNoteRepository),\n    new CreateEmptyNoteService(taskNoteRepository, now)\n  )\n  var app = new Vue({\n    el: '#app',\n    data: {\n      message: 'Hello Vue!',\n      list: []/*tasks*/,\n      rootBody: ''/*taskTreeRepository.getTaskRootBody()*/,\n      filter: '',\n      owner: config.owner,\n      repo: config.repo,\n      issueUrlPrefix: `https://github.com/${config.owner}/${config.repo}/issues`,\n      filterCheckbox: {\n        'title': {label: '件名', checked: true},\n        'assgin': {label: '担当', checked: true},\n        'body': {label: '内容', checked: true},\n        'milestone': {label: 'マイルストーン', checked: true},\n        'latestnote': {label: '最新状況', checked: true}\n      }\n    },\n    computed: {\n      decoratedList: function() {\n        console.log('decoratedList');\n        var result = this.list;\n\n        var fitlerTargetMap = {\n          'title': v => v.title.indexOf(this.filter) != -1,\n          'assgin': v => v.isManaged && v.summary.assign.indexOf(this.filter) != -1,\n          'body': v => v.isManaged && v.summary.description.indexOf(this.filter) != -1,\n          'milestone': v => v.isManaged && v.summary.milestones.contains(this.filter),\n          'latestnote': v => v.isManaged && v.latestNoteText.indexOf(this.filter) != -1\n        };\n        \n        result = result.map(v => {\n          v.isHilight = false;\n          console.log(v.summary);\n          if(this.filter.trim().length == 0) {\n            v.isHilight = false;\n          }else if(Object.keys(fitlerTargetMap).filter(key => this.filterCheckbox[key].checked).some(key => fitlerTargetMap[key](v))) {\n            v.isHilight = true;\n          }\n\n          v.isEditingMilestones = false;\n\n          return v;\n        })\n        return result;\n      }\n    },\n    methods: {\n      reload: function(){\n        this.list = taskListFactory.create().map(v => {\n          if(!v.isManaged) {\n            return v;\n          }\n          v = v as ManagedTask;\n          var obj = v as any;// vue用に変更\n          var editingText: EditingText = {\n            milestones: v.summary.milestones.list.map(v => `${v.dateText} ${v.title}`).join('\\n'),\n            isEditingMilestones: false,\n            assign: v.summary.assign,\n            isEditingAssign: false,\n            goal: v.summary.goal,\n            isEditingGoal: false,\n            completeDateText: v.summary.completeDate ? v.summary.completeDate.text : '',\n            isEditingCompleteDateText: false,\n          };\n          obj.editingText = editingText;\n          \n          return obj;\n        })\n        console.log(this.list);\n        this.rootBody = taskTreeRepository.getTaskRootBody()\n      },\n      onPressedRootBodyEdit: function() {\n        taskTreeRepository.updateTaskRootBody(this.rootBody, callbackToReload)\n      },\n      br(text) {\n        return text.split('\\n').join('<br>')\n      },\n      createTask(titleOnlyTask: TitleOnlyTask) {\n        services.titleOnlyToMangedService.convert(titleOnlyTask, callbackToReload)\n      },\n      editNote(note: Note, selector) {\n        var body = document.querySelector(selector).value.trim()\n        services.updateNoteBodyService.update(note, body, callbackToReload)\n      },\n      createNote(taskId: TaskId) {\n        services.createEmptyNoteService.create(taskId, callbackToReload)\n      },\n      updateSummary(obj) {\n        console.log(obj);\n        var editingText: EditingText = obj.editingText;\n        var summary = taskSummaryRepository\n          .getSummary(obj.taskId as TaskId, now)\n          .updateMilestones(MilestoneFactory.createMilestones(editingText.milestones, now))\n          .updateAssign(editingText.assign)\n          .updateGoal(editingText.goal)\n          .updateCompleteDate(DateInTask.create(editingText.completeDateText, editingText.isEditingCompleteDateText))\n\n        taskSummaryRepository.update(\n          summary, \n          callbackToReload\n        )\n      }\n      \n    }\n    \n  })\n  app.reload();\n}\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}
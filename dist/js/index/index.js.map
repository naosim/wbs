{"version":3,"sources":["infra/github/IssueRepositoryImpl.ts","infra/github/IssueRepositoryDummy.ts","infra/github/CommentRepositoryImpl.ts","infra/github/CommentRepositoryDummy.ts","domain/TaskSummary.ts","infra/tasksummary/TaskSummaryImpl.ts","domain/TaskNote.ts","infra/tasknote/TaskNoteRepositoryImpl.ts","domain/TaskTree.ts","domain/task.ts","TaskListFactory.ts","service/TitleOnlyToMangedService.ts","service/UpdateNoteBodyService.ts","service/CreateEmptyNoteService.ts","index.ts"],"names":[],"mappings":";;;;;wCEEA,CCAA;AWCA,AXAA,ADAA,IYAA,qBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;AJHA,AJEA,AECA,ACHA,ANIA,ADAA,ADHA,ADEA,AOFA,AMCA,AFCA,ACDA,IFFA,AJEA,AECA,ACHA,ARCA,ADEA,AOFA,AMCA,AFCA,ACDA,INAA,EIFA,EFGA,CEHA,CHCA,AIEA,GFHA,AFCA,AIEA,GDHA,ADAA,CCAA,EVGA,CCFA,AMAA,AIEA,CJFA,AIEA,ACDA,CCAA,CJFA,CAAA,QCAA,CAAA,MDAA,CAAA,CEGA,CAAA,EJFA,CAAA;ADCA,AECA,AMCA,AXEA,ADAA,ADLA,ADEA,AaDA,ADAA,IEEA,sBAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;AJCA,AJHA,AECA,ACSA,ANLA,ADAA,ADNA,ADEA,AOCA,AMFA,AFEA,ACFA,IFGA,ADOA,AFRA,AIAA,QLFA,AECA,ACSA,ARXA,ADEA,AaDA,ADAA,OFGA,OHDA,EIAA;ADCA,AJFE,AECA,ACQF,AKNA,AXEA,ADAA,ADJE,ADGA,AOHF,AMDE,AFCF,ACDE,IEGF,ORHE,AECA,APAA,ADGA,AaJA,ADAA,INAA,CAAqB,GECrB,CAAqB,EFDrB,EAA8C,CEC9C,CFDA,CECwC,AME1C,CRHqE,EQGrE,AdCE,CCHA,ADIE,CMLF,ALCqB,AWDrB,CCAA,ADAoB,CNAoE,AOC9E,CLAV,EAAoE,AMEtE,CRHE,AQGF,ERHsG,ENIpG,EAEE,KAFF,ECHA,ADME,AYPF,CCAA,CZCgD,AWDU,CCEhD,CbEV,EAGc,AaPd,EAEmB,iBCCrB,CAAA;AJDA,AJFuB,AECmB,ACQ1C,ANFA,ADAA,ADNuB,ADQnB,AORJ,AMAY,AFAZ,ACDsB,QJCoB,CFDnB,ALCA,ADQd,AaRG,ADDU,EZSlB,CUPJ,ADOA,AFRA,AIAA,EXQc,CMTS,CECmB,EFDnB,ANSL,GQRwB,GFDnB,ANST,CAAW,CQRiB,CAAA,AKA9B,ADDU,CXCC,COAmB,CKA9B,ADDU,CXCC,iBYAX,ADDU,EXCC;ASErB,AJH8C,AECN,ACcxC,AKXF,AXKA,ADAA,ADVU,ADUgB,AOPxB,AMAU,AFAV,ACF+D,IEIjE,ENH0C,ARQhB,GMTsB,ALDtC,AYGE,EHCV,AJH8C,AGe9C,ATN6B,AOP7B,AIAA,CEAU,CbOqB,CMTe,AECN,CKC9B,CPFoC,CECN,CKC9B,CLD8B,ACcxC,CACS,GRjBD,EQgBR,CCZA,ATJyB,CSIL,ADcX,CKbX,EbLU,CaKV,EPFE,CAAoB,CEapB,AEbA,CACU,CFeD,CKdX,CAAA,ELWE,EAGqB,KCfrB,EAA0E,CHD1E,EAAwD,IIAxD,EAEU,SDDV,EAA0H,OCD1H,CGEF,CAAA,AHAkD,SDDhD,EAA0K,GAA1K,EAAmL;AAA/J,AJH+C,AECC,ACe3D,ARhBD,ADSe,AOPH,AMCf,AFAK,KXME,CAAV,GUNkB,AJH+C,AGgB1D,ARhBD,AMEY,AICV,GVHF,CKA2D,CGgB1D,CRhBK,CKAqD,CGgB1D,ARhBD,GKA2D,EGgB1D,IFdW,GAAA,CGCA,ACAV,GDAU,ACAV,aJDU,QGCA,ACAV;ADAgE,AJHc,AGiB/E,AKXX,AXOA,ADAA,ADVG,ADOC,AOND,AIAS,ACHV,EAAA,EEKF,AXOA,ADAA,KQV4E,AJHc,AGiB/E,ATPF,AWNG,ILJ8E,ENUtF,CMVsF,CGiB/E,CTPO,EMVwE,AGiB/E,CKXX,EdIuB,AYTrB,CEKF,AFLE,CVYF,AFHkB,CGGlB,AHH0B,CUPkD,ACChE,CFaD,ECdiE,ACChE,CGEZ,CAAA,CFLE,CAAA,CZSgB,CAAkB,IYTlC,CZSgB,EAAyB,AYTzC,IZSgB,CUP0D,AVOxE,AWNQ,KCHH,IAAP,EAAmB,IAAnB,EAAiC,EAAjC,EEKF,AFLqD,CEKrD;AJH4H,AJHlB,AECnF,ACiBZ,ANLX,ADAA,AFFG,AaND,AFAI,ACHF,ECGF,MDHM,CFCoH,AFFrG,ACiBZ,IAAA,AGhBE,CJDU,ECiBZ,AGhBK,CJDO,GCiBZ,AGhBS,CAAC,CJDE,EKIrB,CAAA,EHF0H,GAAA,CED5G,CAAgB,ECG9B,CAAA,CDHc,CAAZ,ICGF,GAAA,IHF0H,MGEnH,MAAP,EAAuB,EAAvB,EAAyC;AHFiI,AFFlI,ACSxC,AKDF,AXIA,ADAA,ADTE,AMEO,AMAL,ADHA,EXCF,AMEO,EOGT,IDHQ,CHHoK,AFFlI,ACSxC,AGPO,GFAmK,APU5K,ADAA,CWPa,EHH+J,ADO1K,CIJc,CLL0B,CEEkI,ADOxJ,EDTsB,CKKrB,CJInB,ARNA,CAAA,CMEO,CAAA,EKHL,CJFsC,AMQ1C,AFN4B,GEM5B,CbLE,AMEO,CNFP,CWDE,CLGF,AKHiC,GEMnC,CAAA,ADHgB,CZFd,AYEsC,ADHpC,EAAsC,CXCxC,CWDE,CLGa,EAAf,CMAc,CNAK,AMA4B,IZFvC,AMER,EAAuB,AMAT,EAAyC,IZFvD,EAAiD,SYEnC,CAAyD,KAAK,ECG9E,CAAA,ADHgB,CAAZ;AHHsL,AJFxL,AEAwE,ACUxE,ANIA,ADGA,ADbE,ADOF,AOLE,AMAA,AFAF,ACHC,ENHD,ANWA,AWLA,CCNA,CXIE,EKJF,CAAA,CCMK,CEIL,AIJO,EVQP,ADGA,CKXS,CAAC,CNFE,CAAC,CKJb,CAAA,GGUA,AFJK,CPKL,AOLkB,CPKlB,CSDuB,GFJlB,AIAL,CLNA,ALIa,AYEX,AFAF,CFIA,AIJ0B,EPN1B,CNWA,AOL4B,CLW5B,AFNA,AOL6B,CJQ7B,ADIE,AKZA,EAA8B,CJQhC,AQRA,CAAA,EXKA,CMXW,ENWX,CaLE,CPNF,AJiBA,AWX0C,AFA1C,ELNuB,AJmBrB,CSbF,EEAE,EXWF,AWXiD,CbKzC,CESN,AWdA,CbKF,EAA2C,CEM3C,ASXQ,ETcM,WSdd,EAAsC,EAAtC,EAAwD;ALLtD,AGUF,AKFF,AXIU,ADAA,ADTW,ADOnB,AOJI,AMAH,AFDD,GEFA,CCKF,IdEE,AWLA,CFKA,ANEQ,ADAA,EIZC,ELGU,ADOnB,AOJW,AIDX,CGGF,CRRe,CNUb,AWLA,CGGF,APFM,CEIJ,ETAA,AWLA,CFKqB,ARPM,EAAR,CaKrB,CAAA,AXIU,ADAA,COFR,ENE2B,ADAA,EIZlB,AHYD,ADAA,CIZqB,KAAK,MAAzB,EAAiC,AQQ5C,CAAA,IRRiD,EAAtC,EAA0C,KAAK,IAA/C,EAAqD,IAArD,CAAP;AIEF,AJDC,AEDD,ACWA,ANIC,ADMC,ADlB2B,AMI1B,AKJL,EFDE,AFFA,CFDA,ELIY,EAAmB,COH/B,CAAA,ACWA,APUO,AUlBT,CXAc,CCkBV,ADlBA,GCkBU,COVZ,ECTA,CAAA,ADSS,APUO,KMrBhB,CAAI,ANqBQ,CAAW,COVvB,CCTA,CAAA,EECF,EJHM,CAAA,CEEJ,GAAA,KFFA,EAAI,KEEJ,QFFA,EAAe;AEGb,ADcE,AKRN,AZY0B,ADjBvB,ADOC,AaJJ,AFDI,ACTJ,CAAA,EXKE,AWLF,CEYA,EZY0B,EQlBlB,ACGA,CHNN,ARWO,AaJT,EXc+B,CQlBnB,CRkBqB,ASfpB,EDHE,AVQX,CAAY,AWLA,IDHI,CIMpB,GNTE,AMSF,EdEI,CAAuB,EWLE,CAAC,CGG9B,ADFA,CCEA,MJNe,CAAwB,GCGvB,EAAZ,MDHW,CIMf,CJNI,AIMJ;AJLI,AJFJ,AFAA,AIDI,ALgBF,ADIuB,AFVG,AOHxB,AFbJ,AQEA,AFUI,CEVJ,CVoBE,CUpBF,CTKA,ACPA,CH0Bc,CAAV,AFVwB,GMT5B,AKKS,EDHE,AVOsB,AOHtB,EDNX,AFAA,AIDW,ARUwB,GUPnB,CLThB,CGMgB,EEGL,ALTX,CKSqB,GPanB,CAAA,CObwB,AFHf,CAAc,AHNzB,CAAA,EMYI,CAA2B,EHNpB,CLgBT,CAAA,CKhBgC,CAA9B,AGMA,CAAkC,EDHjB,CAAoB,ECGrC,EDHiB,ACGwB,EDHE,CAAC,CAA3B,CAAV,EAAyC,EPalD,AEtBF,CAAA,AMY8C,EDHnC,APaT,CObwD,ACGb,CDHlC,CAAP,ACG+C,ORU7B,IQVuB,EAAiB,KRU5D,EAAuC;AOZtC,AJRH,AFKA,AIAG,ACgBH,AKRA,AXQI,ADIA,ADjBF,ADMyB,AOFrB,AIDA,ACXO,CNAb,CLQE,CSHA,AJLF,CQaA,CNViB,ARWb,COFE,CPEqC,AYd9B,CTqBN,AITC,AKZK,CHqBb,ANAQ,ADIC,CKbC,AIDA,EJAC,CIAL,CRUO,CDIT,ASdW,EFUf,ATP4C,CEW1B,IDjBhB,ADMyC,CEWpB,ADjBrB,CDMiD,CEWjC,CAAQ,EFXiB,CYd9B,CEab,AXQQ,AHP+C,CGOzB,CFb5B,AWRW,CEab,AbLE,ECiBgB,CAAkB,IYZpC,CAAA,AZYkB,ADjBhB,CEaM,CAAJ,ADIuC,CDjBzC,CEa0C,EDI1B,CAAd,KUzBS,CXQF,WAAT,EAA4B,UaK9B,CAAA;AVRA,AKKA,ANYM,ADIF,ADjBA,ADME,AOFA,AFbN,AQAa,AFYL,CFFR,EAAA,CJVA,EEaM,CMbO,CZSN,AYTM,AFYL,CTcC,ADjBD,CDMC,AOFC,AIDA,CRUC,AQVA,CPPX,AGQY,CLaR,CDjBS,AUGH,CXGJ,AWHE,CTcQ,AKbA,CNJR,ADMQ,AOFC,CNJA,GONA,ANuBI,AG1BrB,CEaY,CLaI,AKbO,CLaC,AKbZ,EAAc,CJSpB,CAAsB,CFbpB,CAAJ,AMI0B,AMbjB,CX0BG,AKbe,CLaC,ADjBD,CYTlB,IX0BG,CKbU,CJSpB,ADIiC,AKbA,IJSI,ADI3B,CCJ4B,ADIxC,AKbsB,CAAd,EAAmC,IAAnC,EAFD,EMXE;AHSH,AJTG,AFMX,AUQF,AXQ6C,ADK1C,ADjBG,ADME,AOFF,AFdN,AMaQ,EDJE,EIKV,EPAM,CDdO,CAAA,AHsBgC,AHNrC,EGMuC,AFZtC,ADMC,AOFA,CHRR,AJUS,CMhBE,AHsBoC,AIRrC,CJQgC,EGtB/B,CNgBH,AOFM,CGLN,AHKO,CGLP,AVOQ,CMhBL,CFMX,CACS,AHGS,CDMV,AOFE,CPEJ,AOFe,ENJC,ESDd,AIKV,APA2B,CGLjB,AHKkB,EOA5B,AbJ6B,CGJ3B,EAES,EGMY,CAAa,COApC,CVRE,AUQF,EVLW,CGKY,CGLb,GAAR,AHK2C,CHR3C,EAIU,CHAN,EGJJ,AHIgD,AMIC,EHJ9B,EMDI,EHKb,EGLV,AHKyD,EGLF,EHK7C,EAHD,GGFT,EAA0E,CIK5E,CAAA;AJLE,ANFS,AIJM,ACOJ,ANYuC,AFX5C,ADMA,AOFF,AFfN,AMcO,GHXL,GDYI,CELO,CCDX,ADCW,ANYuC,CCfzC,GDe6C,AEtBxD,CKSE,ATEW,CEW6C,CHP1C,CUNd,ADCW,ARCL,ADOA,CCPS,AMIA,EHRN,AKGE,AFKM,CGNjB,ENFS,KKGE,CRCL,IGJG,AHIqB;AKLhC,AFEW,AIFT,AMSF,AXO4C,ADM1C,ADjBgC,ADQ1B,AORG,AFXX,EGME,ANsBA,EItBF,AQSA,CPJI,EJWuC,CKhBzC,ALgBI,CGhBN,AFEW,AIFT,CPKgC,CIXlC,GDQW,AHG2B,EAAE,CGH7B,KAAA,CIFT,ANsBA,CMtBI,ANsBJ,IYbF,ATfA,GSeA,ATfA,CGMM,AHGL,CGHK,ANsBJ,CAAA,IYbF,CAAA,GNTE,EAAI,SNsBJ,EMtBA,CNsBA,CMtBa,SNsBO,OYbtB,CAAA,GZaE,EAAuC;AQnBgB,AJHzD,AFGW,AKcX,ANAK,ADMD,ADlB4B,ADSzB,AOHJ,AIFG,GJRG,CEgBT,EERM,EDNmD,ARoBlD,CEpBI,AIHT,ANuBM,ADlBA,EUIE,CAAC,ETcE,CQpB4C,ANA9C,EKcX,CLdW,EMA8C,INA9C,AIHT,CEGuD,CAAA,EAAA,ERoBjD,ASdF,CTcwB,ASdA,WTctB,CAAJ,EAAwC,MSdtC,CAA6C,IAAI,UAAA,CAAA,cAAJ,CAAmB,KAAK,CAAC,KAAzB,EAAgC,WAAhC,CAA7C,EAAqG,EAArG;ADNmD,AJHzD,AFIY,AIHR,ACgBJ,AKEA,AZKM,ADlBC,AIXE,AMeJ,ENfI,ESwBT,CHfI,CDDqD,CTCnD,EGAM,CIHL,CAAC,CFDR,AFIY,AUeZ,CJhByD,ARqB5C,ADlBA,EGFD,AFoBN,CQrBmD,AFF5C,CEE4C,ATGzC,CGFJ,CCTH,CAAA,MAAA,CGML,CPKuB,COLD,AHNxB,GJW6B,CAAlB,EOLmB,APKE,IIXlB,QAAd,CGMwB,CHNQ,GAAhC,EAAyC;AKQiC,AJF1E,AFKC,AIJC,ACeJ,AKEA,AXDI,ADOC,ADlBG,ADQF,AOHG,AFhBL,AMeD,EJCM,CIVP,GXaI,EKnBE,GCKN,AHiBS,AHHD,CSEV,ATFW,CQbA,APKE,AIXA,GCKX,AHiBc,AFXR,AIXQ,CCKO,ALMN,COLD,ERaV,GMdJ,ANcoB,COHb,AFhBe,CCKwB,ANc1C,AOHG,AFhBgB,CGMd,CAAc,CPKjB,CKNN,CDLc,CCK4C,ADL7B,CGMD,ALgBnB,AFXqB,CEWC,CEtBjB,EAAoB,GAApB,CGMS,AHNe,CGMD,CDU9B,EJME,CAAP,AINF,ECVuB,GAAuB,AHNR,CGM7B,AHN6B,CGMpC,CHNqC,EEgBd,IAAzB,EAAqC,IAArC,EAAiD;ADX5B,AEEpB,ACmBD,AKHF,AXAG,AFZ+B,ADS5B,AOHF,AFjByC,GFkB3C,EKda,CRgBT,GMfiB,CLMW,ADSxB,CSMR,ATNS,AOHG,COMd,CTvB6C,CJWP,CKNf,ACYL,CNNsB,AMMrB,EDZI,ANejB,CAAa,EKpBkC,CAAC,CAAD,CCK9B,AGqBrB,AJ1B2C,CI2BlC,ITPQ,CSMjB,ATNiB,ESQR,ATRS,EOHN,EESZ,EAEqB,CFXgB,SAAzB,GAAmC,IAAI,CAAC,IAAL,EAA7C;AGTA,AJH4C,AFM9C,AKgBS,AKHT,AZME,ADnB4B,ADSR,AOFrB,AFlBqD,AMgBxD,EPLE,CGKO,EFhBO,CAAZ,EKQI,ANGN,CEN8C,AFM9C,AKgBS,ARhBH,AUKR,EGQE,AZMS,EQtBE,AJHmC,CGsBrC,CTPa,CUZR,AJHgC,CGsBrC,APGM,CAAC,CYNhB,CJhBkB,AJH4B,AQoBnC,AdLe,CUZP,AFJN,ARgBc,CSOlB,CLhBT,CAAI,AFmBK,CAAc,CQtBT,CAAW,EVYH,CEUM,AFVQ,CAAd,CUZpB,AVYoB,CITlB,AOKN,CPLM,SAAJ,CUaA,CVbI,CUeO,AZIY,CAAsB,QEnB7C,EAAY,CFmBW,CAAd,CAAP,OYNF,EAGW,sBAHX,EAGyD;AJlBvD,AJJ4D,AGuBrD,AKHE,AXDX,ADOC,ADnBI,ADQiC,AWpBxC,CAAA,CRwBE,CDEA,AS1BF,IVUa,ADUP,CUXE,CNEN,AKiBS,AKHE,GJhBD,CDmBD,ARhBE,ESHE,CDmBJ,CRhBK,GQgBL,ICnBW,ANEpB,ADaA,CAAA,GFZyB,GSHvB,CTG2B,CaalB,CXDX,AFZW,CEYX,CWCW,AbbsB,wBaatB,EXDX,GAAA,UAA4B,KAA5B,EAAgD,QAAhD,EAAqF;ACZnF,AIRW,ACkBb,AKIW,AXDT,AFZI,ADQF,AODJ,AFnBE,EEmBF,CChBA,CLqBE,EHJE,EKpBC,CIqBL,AKIW,IVdF,AHCE,ADQA,AKpBD,CFwBE,AHJA,AKpBD,CIqBX,ANGa,CFZP,CAAS,ADQX,CITU,AKUI,ATDF,EKpBX,ELoBD,CSCJ,CFFA,AFnBqB,CEmBrB,AFnBE,EFwBW,AExBW,CDWf,AHCH,CGDmB,CUcd,EbbmB,CGD5B,AUcS,CPNX,CAAA,QAAA,GAAA,QOMW,EPNF,MAAT,EAAuB;AGVrB,AJJF,AFOC,AKUD,AKIW,AXFQ,ADOnB,ADnBgC,ADS5B,AODF,AFpBuB,AMDd,ELMX,AJ0BA,GErBY,EOXD,CDUL,AJJN,ACeK,AIrBM,CLMX,AGiBA,AKIW,CbdqB,ESHtB,CAAC,APeQ,AHHR,CCTyB,AMQzB,CPCE,CCTyB,ADSxB,EUZR,AHWS,CGXE,AHWf,CEEF,ATDa,CGGc,AIJT,CJIU,AHHR,CMhBpB,AGiBuB,APSvB,CI1BI,AJ0BJ,CQtBE,CPeyB,AHHd,CUZY,ADazB,ATDI,CGG8B,CGnB9B,CAAA,AHmBuB,CWEhB,AXFQ,CQzBR,CTgCX,CYLW,AZKX,CShCW,ILMX,EAAI,YAAJ,EAAc,CQqBH,GH3BA,ETgCX,GAAA,UAA4B,KAA5B,EAAgD,QAAhD,EAAmF;AQtBxD,AFF3B,ACgBA,AKII,AXHiC,ADOrC,ADnB8B,ADU3B,AODC,AFpBA,EGMJ,GLiBY,AHbV,CKVE,CFuBmC,CDOvC,CI1BA,AGkBA,ARXM,COLN,ALiBY,CKjBZ,ALiBE,AEvBO,CEoBC,CLUV,CG9BS,EH8BT,EORA,CFFI,CCdJ,ANwBA,CErBY,AIHZ,ACgBqB,GHlBrB,EGkBA,EJtBS,CGMT,AHNS,CAAK,EGMd,GHNmB,CAAC,CAAD,CAAL,IGML,AHNiB,CAAZ,GGMd,AHN8B,EGMJ,CHNO,CAAC,WAAJ,KAAoB,CAApC,GAAuC,GAAG,CAAC,WAAJ,EAA5C,CAAA,EAAmE,KAAnE,CAAL;AKSA,AJJF,AEEA,ACoBE,ANHH,AFZI,ADUJ,AODE,AFpBA,GFqBH,AHbA,EOSuB,CAIrB,CNZS,EOHJ,IEEI,AJJF,ALOE,ISHI,AFFb,CFFY,AEEE,IFFP,AEEP,CEEa,AJJI,AEEE,CEEN,GFFb,EFFO,GAAmB,CAAnB,EIIE,CAAgB,AJJK,IIID,CAAC,AJJK,IAAL,CIIL,AJJe,CIIJ,AJJN,CAAvB,GAAsC,EIIpC,EAAmC,AJJ5C,KIIS,EAA0C,KAAK,qBAAL,CAA2B,UAA3B,CAAsC,IAAI,CAAC,KAAL,CAAW,MAAjD,EAAyD,KAAK,GAA9D,CAA1C,EAA8G,KAAK,kBAAL,CAAwB,QAAxB,CAAiC,IAAI,CAAC,KAAL,CAAW,MAA5C,EAAoD,UAAlK,EAA8K,IAA9K,CAAP;AACD,AJJF,AFGW,AIDX,AMmBH,AZII,ADlBI,GGJN,AIHA,EEEE,AJJY,GJ2BR,CYJR,EJhBS,ETEI,ESFA,CTEL,CacR,AZIiB,ADlBA,ESFA,CAAC,ARoBE,CAAhB,ODlBI,GSFC,CTEuB,CSFD;AACzB,ADgBJ,AKPF,AXIE,ADOE,ADnB8B,ADWxB,AKtBN,CSmBJ,CLOE,ANHA,AHDQ,CcHV,KZWQ,AG9BA,EJW0B,EIXtB,CKUC,CRoBC,ADnBwB,CQepC,AJ1Ba,CI0Bb,ARfsC,CSDvB,ARoBA,CAAC,CAAd,AG9Be,ECEH,ANoBN,CAAA,CUZO,ALVF,CKUE,APaf,AEvBsB,CI0BtB,ANHA,CMGA,GJ1B2B,CAAC,CLsBpB,CUZG,AVYH,CUZgB,CPaxB,AEvBsB,CFuBtB,AEvBiC,GKUtB,ADgBX,AJ1BsB,CAAT,CKUkB,AVYvB,AKtBN,CI0BF,ANHA,EHDA,CUZmC,APanC,COboC,QAAL,ADgB/B,ATJiB,CUZ4B,APatC,GObwB,CAAkB,GVYjD,EAAyB,EGCzB,EAA4B,CObqB,CAAA,APajD,EObkD,APaV,IAAxC,EAAsD,QAAtD,EAAoF;AOb9B,ANAtD,AIHF,ACoBI,ANJF,AFZ8B,ADY5B,AOFA,AFpBA,EDSF,MDaA,AIFM,CCdR,APIQ,ADYC,EIbP,AKiBS,AJ1BA,CDST,CDaA,AIFW,EGX2C,ADiBzC,AJ1BA,CFsBb,AIFsB,CCdxB,ARgBI,CAAc,EUb0C,APa1D,COb2D,ANA3D,AGW2B,CHX3B,IJawB,CAAC,CSIZ,AJ1BA,CI0BA,AJ1BA,CDSb,GAAA,AJaE,EUboD,CAAoB,CAApB,AVanB,COFb,CGXuD,AHWhC,AFpBpC,CAAe,GDSf,EJaP,CUbkF,ELT3E,CKS8E,CAAjC,ALTpB,CKSoB,ANAtD,AKiBS,CAA2B,CLjBb,CCTd,CAAP,EI0BuC,CFNnB,CAA2C,GEMxD,CAAP,EFNoB,EACjB,GADiB,CACb,UAAA,CAAA,EAAC;AGZ+E,AJR3E,AFSZ,AIhBJ,ACiCG,AKAH,AZGI,ADnBG,ADYJ,AOFa,AFpBb,CGPH,AMiCC,ER1BC,AEPF,AC+BE,ATJQ,AK3BD,IKewB,CAApB,ANCN,AFoBC,EQrBsF,ERqBlF,CEpBA,AUiBX,APNe,CGZH,CAAP,ARqBS,IEpBX,EAAgB,GFoBZ,IAAO,CAAC,GAAD,EAAM,CKTiB,CAAC,ELSxB,EAAU,GKTT,CAA+B,CAAC,CAAC,EAAjC,EAAqC,CAAC,CAAC,IAAvC,CAAA;AGXX,ANCC,AUiBJ,AXLE,ADSE,ADnBD,AMQuD,KGbnD,AHYe,COQlB,CPNC,EJCE,CDSA,CQrBA,ENAI,AFqBP,AKZkB,CAEV,CLUA,GErBR,GUiBJ,GPNY,CJCV,AIDU,CJCY,CIDX,UJCX,EAAmC,EAAnC,EAAuC,IAAvC,GAA8C,IAA9C;AOXE,AJRJ,AFQG,AIlBQ,ACkCb,AKCE,AXLE,ADSI,AFRE,AOHS,AFpBnB,ECEE,ANqBQ,EGDN,EWKE,CRzBJ,AEVW,CFUX,AEVW,ANuCL,COLR,AJ1BA,IKUa,AHUM,CJEL,AIFK,CJEJ,CK9BF,ANuCG,CQrBC,AJRf,AJ6Be,CI7Bf,CEVW,CNuCG,CAAR,AFRE,CSGV,ATHU,CUbO,AIiBf,CJjBe,ELVjB,CGRa,AL8BE,IHCL,CAAA,CMrBR,CNqBQ,EMrBR,CIQW,AVaX,CUb6B,KAAlB,EAAyB,CJRpB,CNqBL,EUbA,AJRX,ANqBA,CUbI,CJRqB,ANqBV,GAAf,EAAoB,GAApB,EAAuB;AUZpB,AJRD,AGWJ,AKeE,AXPmB,ADUb,ADpBJ,ADYA,AOJgB,AF7BpB,CIuBA,AJvBA,CSsCE,CLfF,AJvBA,EE2BwB,EAGjB,CDlBC,ANqBD,EONiB,CNNb,ADYP,AOHO,CDlBC,CHmBS,AHET,EMrBG,CLSC,CaiBC,ER1BE,ALSR,CaiBS,AbjBA,CEUS,AIDlB,CJCmB,AIDnB,CDlBI,CAAS,AQ0BA,APRZ,EJCiB,CGnBd,CAAX,AHmBgC,GFVzB,CAAP,CEUoC,CAAC,WWOjB,CAAA,IXPY,CAAsB,WAAtB,EAAmC,CWOnD,CAChB,AXRgC,CAAP,CAAR,IWQX,CAAC,WADS,EAEhB,MAAM,CAAC,KAFS,EAGhB,MAAM,CAAC,IAHS,CAAlB;AJjBC,AJRC,AFOA,AILJ,AM4BE,AXZyE,ADWpE,ADpBJ,ADYG,AOJU,EOad,CJlCQ,ATDR,CKKE,AEEJ,CLgBc,CHGR,CGHuE,CGlBrE,ANqBA,CMrBC,ANqBA,CGHK,CCXH,ADWP,CHGI,CAAF,AOJU,GDjBZ,AFOY,CEPC,ACiBG,CCfpB,CM4BmB,ER9BE,CAAC,AQ8BA,IVvBX,AUuBe,CVvBC,AGUP,CDjBH,ACiBG,IAAJ,CAAS,CDjBS,CAAjB,AFON,CAAyB,EEPE,CCiBtB,EAAiB,CDjBS,ACiBR,CDjBS,ACiBR,CHVxB,CAAP,AGUY,EAAuB,EOab,CR9BY,AQ8BZ,CPbiB,IDjBY,ACiBhB,CDjBtB,ACiB+B,CAAC,CAAC,CDjBS,GCiBpB,CDjBwB,ACiB/C,CDjBgD,CCiBP,CAAC,CAAC,IDjBA,AQ8BrC,APbN,COcZ,APdY,IDjB4D,EQ+BlE,CAAC,CR/BqE,CAAC,MAAL,EAAjB,CQ8BrC,ER9BsE,AQgCxF,CRhCA,EAFuB,CAEoE,EQgCrF,CAAC,KAFW,EAGlB,MAAM,CAAC,IAHW,CAApB;AVtBC,AINH,ACQa,ANSV,AHGE,AOL2D,AF9BnD,GDgBX,ADaA,EIFsB,EEJX,AFQN,AF/BM,CIuBA,AJvBA,GE2BW,CAIZ,SERC,CFQA,CAAD,CERC,CFQG,AF/BH,CE+BD,EAAK,AF/BJ,SIuBA,QJvBA;AKsBH,AJRN,AECJ,AMiCE,AZLI,ADpBJ,AMSM,EGVE,ATCR,EKTE,EQkCC,AZLC,AKXE,CAAC,CDlBD,ECkBI,CDlBD,ACkBE,CCjBb,AMiCW,APhBG,COgBF,ERlCG,AJ6BA,CKXH,CGVF,AHUS,CGVT,CJRC,CAAS,EQkClB,AbzBA,CAAA,CKTsB,AQkCD,APhBX,CDlBa,CCkBjB,CGVE,CAAA,IAAA,ATCR,CAAA,ESDA,EJRkB,EAAT,CAAP,ILSF,CSDa,ETCb,ESDA,EAA2D,IAA3D,EAAgH,ATCpG,WAAZ,EAAiC,KAAjC,EAAgD,QAAhD,EAA6E,CAE5E,CAFD;ASDA,ANAA,AINA,ACqBF,AKYI,AXhBF,ADWI,AFRF,AOHI,AFtBR,EDWE,ADWA,EMIF,AKYI,ATtCJ,EHiCM,AKXE,CAAC,CGXP,ANAA,CAAA,AJcO,COHG,CCjBV,ADiBW,CAAC,CGXZ,ARsBW,CAAC,COPd,CCfE,AHWU,CLWN,AFRF,AOHe,CLWD,AFRA,CcaC,CJ3BjB,ALXF,CLyBI,CcakB,CV3BpB,CAAI,ADWJ,AIAU,CCjBV,ALiBA,CKjBqB,AMiCG,APhBlB,CLWF,IM5BJ,EJMI,AINyC,CJMzC,ADWJ,CAAA,IKjBA,EAA4D,ALiB5D,ECXA,CDWA,CCXI,GU2BoB,CAAA,KXhBjB,QCXP,EAAmB,CDWnB,EAA4B,EWgBR,CAAyB,CXhB7C,EAA0C,GWgBS,CAAC,IXhBpD,EAAwE,aWgBpD,CAAlB;ARlCA,AECmB,ACqBvB,AKaI,AXjBF,ADYI,ADnBJ,ADWE,AOHI,AFvBR,EJeE,EawBE,AdbA,EEQE,AFRA,CAAC,CMtBA,AHkBL,CCXA,AINqB,CDkBZ,CPGL,AOHM,EDnBA,AHkBV,ADYW,AFRA,CQrBU,AN6BT,CKXE,CJDd,AHII,AOHE,CClBe,AN6BjB,AFRF,CEQc,AKXC,EJDjB,CWiBmB,CNlCE,AN6BjB,ADnBJ,CKXK,ALWL,CGJA,AU4BsB,CPhBE,CAAP,CDnBO,CQmCE,IRnCG,ALW7B,CAAA,SKXwB,CAAgB,ALWxC,GAAA,CKXwB,CAAqB,IQmCnB,CAAA,ERnCF,CLWb,KKX+C,IAAI,CAAC,CLW/D,EAAgC,IKX0B,ALW1D,EKXE,AQmCoB,AbxBwB,EKX4B,AQmCxE,MbxBF,EAA2E;ASJhB,AJNvD,AFOF,AIP2C,ACqB/C,AKcG,AZLG,ADpBJ,ADYC,AOHK,AFxBR,GLqBU,KUVmD,ATI3D,COV6C,CN8BtC,AKXE,CAAC,CGbiD,AJNjD,AGqBZ,AJ1BA,CDYW,AHGT,CMSa,CCnBgC,ADmBvC,CNTN,CSJ2D,AHa3C,CHZF,AIP+B,CN8B7B,CDpBhB,ESJ2D,ARwBxC,CQxBwC,CFNd,AN8BzC,AKXmB,CGboC,AJNvD,ACmBoB,CHZf,AFuBc,AKXP,CHZO,IAAI,CFuBE,GEvBN,CAAS,AFuBT,KEvBc,GAAL,CAAS,OAAT,KAAqB,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAjD,CAAd,CAAP;AMDyD,AJLxD,AFOF,AIR+D,AC6BhE,ANXE,AIEI,AFzBR,KDWqB,CMAwC,EPYrD,EOZqD,APYnD,AIEC,CEST,AFTU,AFzBZ,EKW6D,APYhD,CIEE,CGd8C,AHcrD,EAAU,CJFA,IMWhB,CACW,CFVY,CAAP,EFzBlB,EIkCE,CJlCF,CIoCa,AJVZ,CA1BD,CACE,CFsBW,CAAsB,CMWjC,EAGW,OAHX,CNXW,CMeA,CNfmC,MAA5C,GMWF,EAKS,IALT,EAKqB;AC5B2F,ADwBrG,AKOX,AXlBE,ADaE,ADrBF,ADaF,AOHK,AFxBL,EL2BA,GObsB,CO0BhB,AP1BJ,CALqB,CAehB,CESI,ANXJ,AFRA,CCqBA,CAAC,CDrBN,CAAS,EQmBA,APEP,EAAU,COFH,GLxBQ,AJkBnB,CAAA,ESMW,ARnBT,CEQA,CAAsB,AFRA,Ca0BG,GAA0B,Ab1BnD,CDaF,CAAA,CCb+B,Ca0B0B,GXlBvD,AFRA,EEQmC,CHKrC,GGLE,AHKF,CGL0C,OWkBe,CAAA,CdbhD,WAAT,EAA4B,WcayB,CAA8B,eAA9B,CAArD;ARlCE,AEFJ,AC8Ba,AKOX,AXnB2C,ADcrC,ADrBJ,ADaA,AOHA,AFxBF,IJcE,Ea0BI,AXnBqC,EAAE,ADcvC,CMhCR,AC8Ba,CNZoC,CGhBtC,ANsBA,CGNiC,CDchC,COFC,APEA,ADrBC,CKTC,ALSA,CDaC,CSMH,CPEL,CAAU,GOFL,CD9Bb,CMqC0B,Adbf,CAAc,EcawB,Ab1BlC,Ia0BsC,AZL7C,CAAuB,GI9BpB,CAAyB,ANsBzB,CAAP,IMtBqC,MAA9B,EAAsC,IAAtC,CAAP,CQmCiD,CAAA,sBAAJ,CAA2B,iBAA3B,CAA/C;AJ/BE,AJHD,AFEkB,AIPrB,ACiCa,AKOX,AXpBmD,ADcrB,ADrBX,ADclB,AK3BD,CGAF,EFJE,AFWA,AIPF,ARyBE,CUjBE,EIgCI,AXpB6C,EOZ7C,CAAC,ADyBI,CNb4C,ADczB,ECd2B,COZvD,ATKiB,CSLP,AR0BsB,EODvB,APCyB,EQ1BlC,CDyBS,ERpBgB,CAAC,Ea2BJ,CZNK,CODlB,ARpBgB,Ca2BoB,Cb3Bb,Ga2BiB,Eb3Bb,CAAC,GAAL,CAAS,Ga2BQ,CAAA,Ob3BjB,CAAP,CAAR,Sa2B4B,CAAuB,MAAM,CAAC,mBAA9B,EAAmD,eAAnD,CAA/C;AV9BF,AKwBa,AKQX,AXtB0C,ADcK,ADrBS,AMYtD,AFxBF,ESyCA,GXtBE,AFPU,EEK4D,AFLd,CEQxD,CCXJ,AKwBa,CPAoC,ADrBnC,CAAV,AMYO,IAAI,EOiBE,CVhCjB,AUgCkB,CLRL,APA6C,EAAE,COA/C,GKQX,APjBa,COiBW,AZRK,AKThB,KAAJ,CESE,AFTQ,IOiBM,EPjBhB,COiBe,CPjBG,COiBC,IPjBnB,CAAP;AGhBA,AJHJ,AFhBA,AIUa,ACmCF,AKQP,AZT+D,ADpBhE,ADeD,AOHC,AFxBD,CDZF,CJuCE,CIvCF,AHqBE,AMJA,ICPW,CESL,AFTK,AM2CN,CRrCP,AG6BW,CPDwD,CYS/D,CJlCQ,CAAC,AD0BF,AKQC,CRrCZ,CJ4BwE,COC7D,CPD+D,EQzBtE,CD0BO,CC1BU,AVoBnB,CQ7BW,AR6BX,GQ7BW,MR6BX,CAAA,OQ7BW,IR6BX,GAAA,UAAY,WAAZ,EAAiC,KAAjC,EAAgD,QAAhD,EAA2E;AUnBtE,AJnBP,AGgCW,AKqBL,AXtBF,ADY2B,AFL7B,CMtCF,EAAA,CH+BI,EOZG,AIkCD,EdfJ,CSNS,APWH,CQxBgB,CAAC,AIkCd,AZVuE,CYUtE,CdfV,CGPY,CMCH,AKqBA,AXtBI,ADYP,CYUF,AdfJ,ESN2B,CCbtB,CAA2B,AVmBhC,GSNS,ICbJ,APYQ,COZ2B,UAAA,CAAA,EAAC;AAAI,ANpBlC,AIcb,ACoBW,AKqBL,AXvBe,ADad,ADpBL,AMaA,ENbA,AMaA,KHtCW,AF2CP,CE3CO,CIcJ,ACoBE,GKqBC,CXvBS,ADaR,EQzBkC,AImCzC,EVvDO,AF6CG,GQzBmC,ANpBtC,AKkCF,CCdyC,APYvB,ADaT,CM/BpB,ALkB8B,ADaT,ADpBnB,COXqB,ACoBW,ARThC,CMaA,CGlB6C,AHkB7C,CGlBuD,APY5B,COZkB,AFN/C,CCoBW,ANFyB,ADapB,CQzB4C,ANpB/C,AIcc,EN+BG,CAAjB,ADpBX,CSL6C,APYP,AFPtC,CSL6C,APYN,ADaR,AKP/B,CAAA,MAAA,GNbA,AMaA,GNbA,GEOkC,CAAsB,GIMjD,GNbK,EMaZ,EAA+B,CJNG,AFPlC,CMaA,CJNqE,AFPnB,CMaJ,IJN2B,CAAC,EFP1E,EAA+E,YEOV,CAAsB,WAAtB,EAAmC,MAAnC,GAA4C,CAA/E,CAAP,CAAR;AOZ4C,AJnBpD,AEcX,ACoBS,AKqBN,AXxBiH,ADc9G,ADrBN,ADeE,AODA,AF1BK,EAAA,GFmBK,CKjBR,CEKC,AJnBM,AH+B2G,CG/B3G,AJ6CL,ADrBN,CQUS,ATKF,AODA,CCxBC,ALiBI,CAAV,EG/BS,AEcA,AN+BD,ADrBV,CCqBW,CFNT,CMvCS,ALwBX,ADec,CQzBC,CCoBN,AJtBF,CAAA,CJYP,CKxBW,AGkCmB,IDpBnB,ACoBF,APWH,AFNJ,AK3BK,CGEiC,AN+BjB,AFNC,AODtB,CAAuB,CF1BzB,EGE4C,AN+BtC,GKPJ,CAA8B,GPC9B,CK3BY,CL2BuB,AODA,CAAC,EF1BtC,EGEwC,AHFZ,CGE+B,CDwBzD,CF1BF,CE0B8C,CF1BT,GGEG,CAA7B,ADwBwC,CCxBnD,ADwBoD,EAAlD,EAAsD,sBAAsB,CAAC,iBAAvB,CAAyC,KAAK,CAAC,IAA/C,EAAqD,KAAK,CAAC,IAA3D,CAAtD,EAAwH,UAAC,GAAD,EAAM,GAAN,EAAS;AGlBhI,ANCL,AINE,AC+BE,ANdD,AHOqC,AOAlC,AF1BF,GFcF,CCNF,EINM,ARwBkC,AOAlC,EAAE,AF1BA,CIiCC,AFPA,EPAoC,COArC,CPAuC,AOAzC,CHlBN,CINe,AC+BX,CJjCY,EGE8B,AC+B5B,CD/B6B,AHF5B,GAAf,CGE0C,CAA5C,CC+BuB,CAAC,MAAtB;AHvBJ,AFFA,AILE,AC+BE,AKSA,AZVI,ADrBJ,ADcmC,AOClC,ECxBH,EFOF,AQiCI,CdjBA,AODA,CCtBE,CAAC,ARuBgD,ESQ9C,ARtBA,EOTP,CN8BS,EM9BG,GRuB0C,CEOvC,CIvBjB,AEPE,CAAkB,ARuBmC,CciBlC,CAAC,AZVD,AFPwC,CCdzD,COTF,CRuBqD,CQvB7B,AC+BtB,APDqB,CAAC,AFPsC,ESQnC,EPDC,CAAC,CM9B7B,CAAgC,EC+BE,CAAC,CPDX,GAAc,CAAf,CAAJ,CM9Bc,AN8BQ,EAAnC,EM9B0B,AN8Ba,CYU3C,CNxC2C,AMwCG,ILT9C,AKSkD,IAAJ,CAAS,IAAI,CAAC,GAAL,KAAa,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAA1C,CAA9C,EAA+F,UAAC,GAAD,EAAM,GAAN,EAAS;AJnCxG,AJEJ,AFFA,AIJI,AC+BA,AKSE,AXxBN,ADcU,ADrBN,ADaiE,AOElE,AF3BC,GEuBF,KCpBM,AHHD,CIkCE,ANfT,AFPS,Ca+BA,AZVC,CQ1BC,CNAX,AIJY,APSR,AIZO,CS2CL,Ab/BO,ADawD,AKzBzD,EKOR,AFJW,AMwCD,CZVE,EDrBE,ADauD,CQtBtD,AN8BA,AFRuD,CQtBtD,AHHb,CLyB8D,AKzBjD,CLyByD,CSSzE,APDmB,CAAC,CM9BT,CAAW,AC+BA,EPDE,CM9Bb,AN8Bc,AGjCtB,CLyB8D,CQtBtC,ALgB/B,CKhBe,APSX,ADamF,EQtBrD,AHHD,CHiCT,AFR6C,AKzBnC,CIkCE,ARtBA,AIZhC,CLyBwF,CEQtD,AGjCD,CIkCK,APDnB,CM9BR,AN8BI,AFRkD,CEQ5B,AFR4B,EQtB1B,AN8BjC,CM9BK,GAAgC,CAA3C,CAD2C,ACgCK,CD/BH,AC+BI,IAAX,GAAe,IAAf,GAAoB,UAAU,CAAC,IAArC,GAA8C,EAA9E;AC1BD,AJCH,AFDE,AK2BC,AKSK,AXlDR,AFmBM,ADY0F,AKxB1F,CFPN,EOQU,APRV,EH+BI,CCZE,AIZA,ES2CE,GVpCN,CECF,ALIY,Ca+BC,CAAC,Ab/BA,AIZA,GS2CD,AT3CI,CS2CT,Cb/BW,CIZb,CDOJ,CAAqB,IAArB,EAAsC,KHIJ;AKFlC,AFFqB,AIJnB,AMyCI,AZXE,ADpBJ,ADYH,AOGD,EAAA,CPLA,GCVI,EOVE,CJIe,CF0Bb,CIxBR,ALIS,COVC,CJIW,AHMV,Ca+BC,CNzCC,AN8BD,CE1BS,AF0BR,CYWP,Cb/BU,COVC,APUA,CGNI,AF0Bb,CAAU,GDtBgB,AMiBlC,CAAA,CDnBA,CAAqB,AENR,CAA6B,KFM1C,AJwBQ,CAAuB,AKL/B,CDnB8C,ACmB9C,EDnBA,EAAmE,IAAnE,EAAwF,GEN1B,CFM9D,AEN+D,CDyB/D,CDnBoG,EENjC,ADyBnE,CCzBoE,IAAL,GAAY,EDyB3D,GCzB+C,CAAkB,CAAlB,ADyB/D,CCzB8D,CAAjD,ADyBgC,CCzB3C,CDyBF,EAA4D;AGpB9D,AJCuB,AFDpB,AIJC,AC+BJ,AKUO,AXpDM,ADwCqB,ADnB5B,AMeF,AF5BE,IGGF,EPUE,CErBO,CAAA,COeb,AJCuB,AG0BvB,AFNS,CNfC,AIbD,EHgCyB,ADnBtB,COVC,CAAC,AHHD,CCQU,ADRT,CHgCwB,CDnBrB,CKLM,AELV,AN6B2B,ADnBtB,COVd,CC+BJ,ED/BsB,AHHb,CAAa,CKOtB,AJCuB,EELnB,ADyBA,CLI6B,AKJN,GJpCd,CEQJ,EFRI,AIoCT,CAA8B,EF5BC,CAAC,CAA9B,CE4BiC,CAAC,AF5BD,ME4BnC,EAA4C,OJpCnC,eIoCyD,CAAC,iBAAvB,CAAyC,KAAK,CAAC,IAA/C,EAAqD,EAArD,CAA5C,EAAsG,UAAC,GAAD,EAAM,GAAN,EAAS;AG/CnH,AJ2BgD,AEJ5C,ACWJ,APiBmD,ADtBf,ADgBlC,AOGI,AF5BE,CKpBR,ADkCA,CTWE,CU7CF,ADkCA,CDXI,CPMA,CMmBE,EAAE,CDrBwC,ACqBvC,EDrBuC,CJwBG,AKH3C,CCzBK,ADyBP,CDrB0C,AEJlC,EFIkC,EEJ9B,GAAG,AN4BuC,AFN1D,CQtBW,ARsBX,CQtBE,AN4B0D,CM5BtC,IN4BS,GFN/B,CQtBE,ARsBF,CQtB+B,IAA7B,KRsBF,GAAA,UAAW,WAAX,EAAgC,IAAhC,EAA8C,QAA9C,EAAyE;AMlBN,AFArE,AIHG,AMwCG,AZb+D,ADjBjE,ADWF,AOIG,AF5BG,GGFN,CPeE,CMaA,COiBE,EdnBJ,CMlBmE,AFArE,EUqCW,CACH,AZd6D,AG9BzD,CCMyD,ANkBnE,CCXY,CAAC,CKPsD,ANkBnE,CEMwE,AG9BzD,EDMjB,AFwB4E,CIxBP,ANkBnE,AKxBkB,GH8B4D,CAAC,AG9BzE,GJaO,CCiBsE,CAAC,IYa3E,EAEH,AZfyE,GAAc,CAAf,CAAJ,CAAsB,YYavF,EAGH,kBAHG,EAIH,IAAI,IAAJ,EAJG,CAAL;AJhEO,AJ2B6E,AFH1F,AICE,ACSW,AKmCR,AZlB4B,ADjBZ,AMgBlB,AF5BK,CDER,EAAA,AGsBE,EOaE,EJ3DS,ADkCA,CClCA,ADkCA,CHP6E,AEFjF,EN0BC,CG7BE,CCK8E,AEFxF,AN0B6G,ADjB1F,GKPqE,CJwBhF,CG7BQ,CIYL,CHP6E,CLO7D,AIZR,CIYR,ARAiB,AIZR,CKtBT,GAAA,ATkCgB,EAAO,AIZf,EAAS,GIYjB,ARA2B,CAAC,AIZpB,EAAe,CJYA,CAAS,CIZxB,EKtBR,ALsB4B,EJYQ,CAAC,CIZ7B,CAAyB,UAAA,EJYV,CAAP,AIZiB,CJYzB,CIZ4B;ACKyD,AEDzG,AM4CE,AZlBM,ADlByD,ADY9D,AKxBiD,GSgCnD,EbpBY,EAAsD,ECe5D,AFHC,CCZK,CAAV,ICkBW,AFNX,CAAY,CKxBqC,KAAK,CAAC,ELwBvD,CAAsB,IKxB2B,CAAc,MLwB/D,AKxBmE,ELwBhC,CKxB4B,GAAO,GAArB,KAA6B,CAAC,CAA9B;ADExC,AU+CZ,AZlBS,ADjBP,ADUqC,AOKxC,AF7BoF,CSSpF,EbJE,GDmBsC,CItB3B,CAAA,CG2Bb,AF7BqB,CH+BX,AFPkC,AKxBpC,ELwBsC,MItBjC,AF6BK,CAAC,EE7BN,CF6BK,EAAM,KAAI,CAAC,CE7BhB,AG2Bb,eLEkB,CAAR;AIzBV,AEAA,AN0BS,AFR8B,AO/CvC,AFwBQ,CExBR,EAAA,EP+CI,EAAiD,EMlBrD,AEAS,MHLM,ELuBuC,EKvBnC,CLuBkC,EAAM,EMlB3D,CNkBqD,EAAS,EQlB9D,CAA8B,EHLX,CAAA,CGKnB,EAAkC,MHLnB,CAAc,IAAI,aAAA,CAAA,UAAJ,CAAe,EAAf,EAAmB,IAAI,IAAJ,CAAS,YAAT,CAAnB,CAAd,EAA0D,KAA1D,EAAiE,MAAjE,EAAyE,GAAzE,CAAP;ACGR,AFGA,AIAE,AM6CF,AZlBO,ADnBP,ADSmE,AKtB5D,CCEP,EAAA,CFGA,EIAK,CNkBQ,EY2BJ,AbrCT,CORS,CAAC,EN2BG,AFVsD,CIjBnE,AU6CA,CACE,GN9CG,ARiBkE,CQjBrD,ARiBsD,EAAL,CQjB9D,ARiBsE,KQjBjD,CAAxB,CPQF,COR6B,ARiBsC,EAAkB,GAAlB,Cc4BnE,Cd5B0F,Cc8BxF,Ed9BiE,CAAA,ec4BnE,EAGE,kBAHF,EAIE,GAJF,EAIW;AVjDX,AICI,AMkDF,AZvBM,AD7DR,ADkD8F,AO/CjF,AF0BR,CJ7BL,EAAA,EDkDI,CckCE,CPjFO,CL0DL,AK1DK,GC+BF,IAAI,CN2BC,CAAC,GAAD,CYuBK,CZvBC,EYuBE,GZvBE,CYuBE,AZvBD,CM3BhB,CAAmB,AD/BjB,GAAA,CC+BF,CAAP,SN2BY,CYuBY,AZvBpB,CYuBoB,SPjFf,MOiFW,CAAoB,qBAApB,EAA2C,kBAA3C,EAA+D,kBAA/D,EAAmF,GAAnF,CAAtB;ARtDW,AFGb,AIEG,AMkDD,AZvBK,AFXJ,GAFD,GcoCI,CRvDO,CAAA,GQuDF,CVpDX,EUoDc,SRvDD,GAAA,GQuDgB,CAAC,MAAhB,EAAZ,GRvDW;AFIX,AF6BG,AD/DQ,AI8BT,KHQA,EDtCS,CAAA,AI8BL,GDIN,KCJc,GAAG,EDIjB,CAAmB,CCJE,CAAC,EDItB,EAAwC,AHlC7B,CI8BM,CAAW,CJ9BjB,AI8BM,CDIjB,CCJ+B,CDImB,GCJf,CAAC,OAAL,CAAa,KJ9BjC,GI8BoB,CAAd,CAAf;ACIJ,AFAqB,AIEnB,AMkDA,Ab3CF,ADUE,AKtBE,ELsBF,EMnBF,ALSI,EOPE,AMkDA,Eb3CE,AIZA,CDGa,AIEZ,EPOE,COPC,CJFS,ACHR,GDGQ,AIEL,AHLA,CGKC,GJFI,ACHD,CLsBlB,AKtBmB,CGKT,AMkDU,AdjCpB,CQjBqB,CFFvB,CQoDyB,CNlDb,AHLI,CGKd,AHLyB,ILsBzB,AKtB6B,CLsB7B,AKtB8B,ESuD1B,KTvDqB,CAAa,GLsBtC,GAAA,EKtByB,CAAX,CSuDS,CAAC,ATvDyB,GSuD1B,CTvDT,CSuDc,AdjChB,CKtBV,ILsBF,EAAkD,QAAlD,EAA6E,mHCF7E,IARS,EAAX;AKTA,AFA0C,AIGxC,AMkDE,AZvBA,ADXJ,ADAE,AKrBE,IHgCA,ADXA,EOhBE,EMkDC,AZvBC,AFXN,AKrBM,CDEkC,AF8BjC,CDXC,CakCN,CNlDQ,CJH8B,AUqD9B,AZvBJ,ADXK,ADAX,CKrBY,CGKC,AN2BA,CE9B2B,AJmBxC,CKrBe,CAAC,CSuDA,AZvBV,CE9BkC,AF8BtC,AFXF,EckCU,CNlDW,CAAC,AHLP,EAAS,CGKC,CAAC,EHLX,CGKc,CAAC,AHLA,GAAf,EAAoB,CGKT,GAAa,AHLxB,CGKU,AHLe,CGKlB,CAAoB,KAApB,CAA0B,EHLR,CGKlB,EAA+B,AHLb,CGKlB,CAAD,AHLsB,CGK3C,iaP8BA,IAdW,EAAb;AKnBA,AFAwD,AIItD,AMkDE,AZvBD,ADIH,AIrCiD,GHG/C,CYqDE,AbnBA,EO/BE,CMkDC,CAAC,EbnBE,CO/BC,CFJX,CLmCa,AIrCoC,CGMnC,AMkDV,INlDc,AHNoC,CGMnC,AHNoC,KGMzC,CAAW,CHNwB,CAAc,CGMjD,EAAgB,CAAhB,EAAmB,AHNkC,GAAJ,EGMjD,CAAyB,AHN+B,CGMxD,CAAZ,CHN+C,KAA6B,CAAC,CAA9B,kUJgD/C,IAXW,EAAb;AKlCE,AEIA,AMkDC,AbNH,AD7BI,AKtB4E,GSsD9E,CbHE,CInDa,CAAb,GGOK,AReA,EMnBP,EEIW,EP4CE,AD7BX,CAAY,EC6BE,SO5CT,AReL,CQfwB,AReA,GMnB1B,CAAqB,CEId,AReL,EQf+B,AReA,GMnBjC,EAA8C,CEIvC,CAAP,EFJA,CNmBkC,CMnBsB,ENmBvB,EAAM,GAAN,EAAS,sSCwC1C,IAXgB,EAAlB;AKhDuB,AFArB,AIKD,AN0BC,AFZ+C,AKrB7C,EDEF,AF+BA,OI/BqB,EDFZ,CDET,CAAA,AJmB+C,EMnB1B,ADFR,GCEQ,ANmB8B,CAAC,EAAL,CInB/C,AJmBuD,CInBvD,AF+BA,CI/BqB,AJ+BrB,IGjCa,CAAA,CLqBkC,CInB/C,CJmBiE,CEYjE,CE/BA,AF+BA,CFZ+C,EAAuB,CKrB7D,CAAc,CHiCvB,AFZ+C,CAAA,EEY/C,CE/BS,QAAT,ACFuB,CHiChB,AGjCgB,CDEA,SCFA,CHiCvB,AGjCkC,EHiCN,IAA5B,AGjCuB,CAAkB,CHiCC,OGjCnB,CHiCvB,CGjCmD,CHiCqB,EGjCjD,CAAd,EAAgD,KAAhD,EAAuD,MAAvD,EAA+D,GAA/D,CAAP;ACE4C,AFC5C,AUsDF,AZxBA,AFZ0E,AKpBzE,GAfM,ELmCL,CcoCE,EZxBJ,CI/B8C,EFCrC,EEDqC,AJ+B9C,CYwBY,ERvDkC,AFChC,AF8Bd,CYwBe,GRvD+B,AFCrC,AF8BT,CE9BmB,AUsDA,OVtDV,CUsDM,CACb,IVvD8B,AUuD1B,QVvDkC,CAAC,OAAT,EAA9B,QUuDI,CAAA,wBAAJ,CAA6B,qBAA7B,EAAoD,kBAApD,CADa,EAEb,IAAI,uBAAA,CAAA,qBAAJ,CAA0B,kBAA1B,CAFa,EAGb,IAAI,wBAAA,CAAA,sBAAJ,CAA2B,kBAA3B,EAA+C,GAA/C,CAHa,CAAf;ARvD4D,AFE3D,AIMH,AMoDE,AdxCC,GIpBD,AJkBA,CQVF,EMoDM,GAAG,GAAG,IAAI,GAAJ,CAAQ,ENpDpB;AAAA,AMqDI,AZ7BA,AGhCK,EAAA,ES6DL,EAAE,EAAE,CZ7BC,KY4BW,CZ5BhB,CAAY,EGhCP,CAAA,eHgCL,CAA+B,AGhC1B,GAAP,QHgCE,EAA4C,AGhCtB,IHgCtB,AGhCF,EHgCoD,AGhCd,GAAtC,EAA+C,KHgCM,GAAD,EAAO,GAAP,EAAW;AI/BjE,AFES,AIKT,AMsDI,AZ7BE,AFZN,AKpBI,EDEK,EU2DL,IAAI,CR7DR,ANoBA,CcyCU,AZ7BD,CGhCE,CDEF,AIKT,CJLS,AF8BH,EAAQ,AGhCC,IDEN,GAAP,MJkBF,AKpBe,CCAf,ADAe,GDEC,OCFL,CDET,ACFwB,EDEQ,ECFJ,CDE5B,ACF6B,EDEY,GCFjB,CAAW,IAAX,EAAiB,GAAjB,CAAqB,UAAA,CAAA,EAAC;ACFhD,AFKI,AIKF,AMsDI,AZ7BE,AFnER,AKkCoD,CCFpD,ANhCA,EMgCA,ANhCA,GcgGM,EV3DE,AF8BA,GMzBN,EJLW,AU2DA,AT9DuC,CAAC,CS8DtC,AT9DuC,CDGtC,AF8BA,CAAC,EGjCmC,CHiCpC,CAAR,AGjC4C,GDG5B,CAAC,EU0Df,ENrDR,CJLc,AIKM,CJLS,GAAf,EAAoB,GAApB,CAAwB,SIKtC,CJLsC,CAAA,AIKmB,EJLlB,aIKvC,EAAyF;AJL9C,AIKvB,AMuDhB,AZ7BE,AGlCoD,KAAlC,CS+DpB,CT/DwD,EGQxC,CMuDZ,EAAE,CV5DiC,ACHnB,CAA2C,GS6D3D,IV1D2C,CAAC,CAAD,CAAR,ACHwB,CAAA,EAAC,CGQhD,GAAA,mBAAA;AFVT,AFK2C,AIKG,AMwDrD,AZ7BC,AFrEM,AKkC6D,KDG1D,CAAZ,AU6DE,CRlEO,ANhCA,CMgCA,ANhCA,CQ0C8C,IHRe,CSgE5D,AThE6D,CAAC,CSgE5D,KThE0D,GGQf,AHR0B,CAAX,EGQf,AR1C9C,CMgCA,ENhCA,CMgCA,GQkEqB,CAAC,ONxDwB,OR1C9C,CckGG,CRlEH,CQ+DH;ANpDP,AMwDG,ATjEgF,KAA5D,CSiEpB,CTjEkF,GAA9D,CAAkE,CSiEhF,EAAE,EAJJ,KT7DkF,CAAA,EAAC;ADIzF,AU8DE,AZ9BA,AGpC2F,MSkE3F,AZ9BA,EEhCC,GU8DI,AZ9BD,CAAC,CEhCC,AU8DC,ATlEoF,CDIpF,KU8DM,CV9DZ,AU8Da,IV9DG,CAAnB,AUyDM,EVzDgB,CFgCpB,CAAsB,AGpCqF,CAAC,MAAjB,CAAwB,CAAxB,EHoC3F,AGpCsH,EHoCnF,CGpCwD,CAAA,CHoCrD,CAAC,EAAvC,IAA6C,GAA7C;AEhCqB,AIOzB,AMwDI,AZ9BA,AGrC0H,EGW9H,GHXwB,CSmEpB,AZ9BA,AGrCK,CAAP,GSmEM,EAAE,EZ9BE,CAAC,GY8BG,CAAC,AZ9BL,CM1BZ,CAAA,AN0BmB,EYwBX,CZxBI,CAAR,KM1BJ,CAAA,WAAA,GAAA,YAAA;AJNI,AIOF,AMwDE,AZ9BD,AGrCF,GAFM,EHgCL,CE1BE,AU+DA,ENxDE,GJPG,GAAA,MIOS,AMwDA,EAAE,CNxDC,KJPZ,AIOiB,CJPjB,CAAK,KAAK,CAAC,CAAD,CAAL,IAAY,CAAZ,AIOO,CAAqB,EJPZ,AU+DY,GV/DT,CAAC,EIOb,AMwD2B,CNxDG,AMwDF,KNxDO,AMwDpC,GV/DU,AU+DwB,GAAlC,EV/D8B,CAApC,AU+D4C,GV/DL,GAAG,AU+DQ,CV/DP,AU+DQ,GNxD5C,CMwDD,CNxDyD,EMwDR,ENxDnE,EJPmD,EAA5C,CAAA,EAAmE,AUwDpE,KVxDC,CAAL;AACD,AIOD,AMwDE,AZ9BH,GATD,GYuCI,KNxDK,SMwDS,EAAE,ENxDE,CAAC,YAAD,CAApB;AACD,AMwDK,ATpER,GGSE,MHTF,QSoEiB,QTpEjB;ADKI,AU+Dc,AZ9BhB,AGhEF,CAAA,CHgEE,CGhEF,KD+BQ,EU+DU,EV/DN,GAAG,AU+DQ,EAAE,EV/DN,EU+DF,EV/DF,AFiCb,CEjCsB,AFiCtB,KEjC2B,CAAC,GFiC5B,CEjCsB,AFiCtB,CEjCiC,GAAX,CAAT,CAAX,AFiCF,GAAA,UAAO,WAAP,EAA4B,EAA5B,EAAwC,IAAxC,EAAsD,QAAtD,EAAoF;AEhClF,AIOF,AMuD6B,AZ9B7B,EMzBA,MNyBA,EY8B6B,CV9DpB,EFgCT,EEhCa,CFgCb,CY8BoC,EAAE,CNvDtC,ANyBA,CMzBA,IJPS,CAAe,IIOxB,CAAA,GJPS,EAAyB,IAAzB,CAAP,KIOF,GAAA,YAAA;AJNC,AIOC,AMsDa,AT9FJ,GD0BJ,IC1BI,CAAA,CS6FS,ENrDX,KAAK,QHxCH,GAAA,IGwCF,CAAqB,QAArB,CAA8B,EHxC5B,GGwCiC,mBAAnC,EAAwD,IAA/D;AACD,AMsDK,AZ9BJ,GM1BF,MN0BO,MAAL,CAAY,EY8BE,cZ9Bd,CAA6B,EAA7B,EAAiC,IAAjC,EAAuC,UAAC,GAAD,EAAM,GAAN,EAAS;AE/BpD,AU6DmB,AZ7Bb,AGtCN,IAAA,KDMA,CU6DmB,AZ7BV,GAAH,EY6BkB,AZ7BV,EY6BY,EV7D1B,EU6DkB,QTnElB;ADPA,AIqBE,AMqD8B,AZ5BxB,AGvCR,CDPA,CIqBE,CJrBF,KF8CQ,EY4BwB,MZ5BhB,CY4BuB,AZ5BtB,EY4BwB,CNrDvC,ANyBc,CMzBd,ANyBM,SMzBN,CAAA,kBAAA,GAAA,UAAmB,YAAnB,EAAiC,EAAjC,EAAgD;AAC9C,AMoDc,AZ3BV,AGxCR,SGeS,AMkDa,GTjEtB,YGeI,CAAqB,UAArB,CAAgC,KAAK,mBAArC,EAA0D,YAA1D,EAAwE,EAAxE;AJtBS,AIuBV,AMoDK,AZ3BD,AGxCL,GGaA,IJrBW,CAAA,GCQX,KSmEc,EV3EH,GAAA,UAAA,KCQX,CAAoB,eAApB,EAAoD;ASmErC,ATnEK,SAAA,CSmEL,KAAK,EAAE,IAAR,GTnEM,GAAA,eAAA;ADatB,AIGE,AMmD4B,AZ1BxB,AGxCL,EGeC,EJHF,EF4BM,IY0BwB,CZ1BpB,CAAC,KY0B0B,EAAE,CNnDrC,CAAA,KJHF,EF4BM,CAAsB,CMzB1B,CAAA,SNyBI,EAAmC,EAAnC,IAAyC,GMzB7C,ANyBI,GMzBJ,UAAqB,cAArB,EAAqD,EAArD,EAAoE;AJHtE,AIII,AMkDY,AZzBV,AGvCJ,MHuCI,EMzBE,CM+Cc,KZtBR,CAAC,CMzBC,GAAG,ANyBL,EAAO,GMzBG,ANyBV,CAAR,cMzBa,GAAuB,KAAvB,CAA6B,cAAc,CAAC,KAA5C,EAAmD,IAAnD,CAAwD,MAAI,cAAc,CAAC,KAAnB,GAAwB,MAAxB,GAA+B,cAAc,CAAC,MAA9C,GAAoD,GAA5G,CAAf;AJJJ,AIKI,AMkDI,AZzBH,KAPD,IMlBK,GJLT,SUuDqB,MNlDjB,CAAwB,QAAxB,EAAkC,EAAlC;AJJF,AIKC,AMiDmB,AZxBnB,GM5BD,ANmBA,OYiCoB,CVtDpB,IUsDyB,EAAE,SAAR,OVtDnB,CAAqB,KAArB,EAAkC;AAAb,AUsDiB,SVtDjB,CUsDiB,IVtDjB,GAAA,AUsDwB,EAAE,GVtD1B;AAAiB,AIMxC,AMgDqB,AZvBX,EAAA,OMzBV,AM4CsB,cZnBZ,CAAA,GMzBV,MNyBU,CAAA,WAAA,GAAR,UAAoB,QAApB,EAAmC;AM3CrC,AMmEQ,AZxBN,CM3CF,EAAA,KN2CE,KAAA,GAAA,IAAA,EYwBoB;AVtDtB,AUsDuB,AT9Dd,EAAA,ODQT,CUsDuB,KAAK,EAAE,MAAR,IT9Db,CAAA,GDQT,ICRS,GAAP,UAAe,KAAf,EAAsB,GAAtB,EAA+B;ADMjC,AIXa,AMmEyB,AZvBlC,AGtCA,CDKJ,EAAA,CFiCI,GM5CS,CAAA,EMmEyB,EZvB1B,CAAC,IYuBgC,EAAE,CZvB3C,CAAiB,KM5CR,GAAA,EN4CQ,CAAA,EAAC,aM5CT;AMmES,AZtBhB,AGtCF,QAAI,EHsCE,CGtCC,GAAG,KAAK,CAAC,CHsCC,GAAG,AGtCV,CAAW,KAAX,CAAiB,MAAjB,EAAyB,KAAzB,CHsC+B,AGtCA,CHsCC,AGtChC,EAAkC,GAAlC,CAAsC,QHsC5B,CAAqC,CAArC,AGtC4B,CHsC9C,AGtC8C,EAAC;ADIxC,AUmDS,ATtDhB,ODGO,CAAA,ECHH,KAAK,GAAG,CAAC,CAAC,KAAF,CAAQ,IDGb,ACHK,EAAc,CDGnB,ACHK,CAAZ,qBDGO;AU2CH,AZRJ,AGrCA,KS2Cc,KZNX,AGrCC,CHqCA,EGrCG,GHqCC,AGrCE,CHqCD,IGrCM,CAAC,IAAN,EAAV,KHqCI,CAAsB,WAAtB,CAAJ,EAAwC;AYwB1C,AZvBI,IYuBJ,IZvBI,IYuBI,CZvBA,CYuBE,AZvBD,gBAAL,CAAsB,WAAtB,IAAqC,EAArC;AYwBF,AZvBC,AGtCD,MS6DA,IT7DG,KAAK,CAAC,GS6DI,EAAE,ET7DZ,CAAc,GAAd,KAAsB,CAAC,CAA1B,EAA6B,US6Dd;AAAA,AT5Db,QAAA,GAAG,CS4DU,ET5DP,GS4DO,ET5DF,CS4DE,AT5DD,IS4DC,CT5DP,CAAY,GAAZ,EAAiB,CAAjB,EAAoB,IAApB,EAAN;AHsCF,AGrCC,MHqCD,KAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,CAAC,CAAC,EAArC,IAA2C,CAA3C;AYuBE,AZtBH,KAND,OY4BQ,MAAM,GAAG,KAAK,IAAlB;AACA,AZtBL,AGtCG,GH8BI,OG9BA,ES4DE,GT5DG,GAAG,CAAC,CAAC,KAAF,CAAQ,GAAG,CAAC,KS4DK,CT5DT,ES4DY,CAAC,AT5DA,CAArB,EAAwB,CS4DJ,EAAO,CT5D3B,EAAZ,CS4DgC,EAAa,SAAb,CAA9B;AAEA,AT7DF,YS6DM,CT7DC,cS6Dc,GAAG;AACpB,AZxBD,AGtCK,EHsCL,MGtCK,GAAG,EAAE,GAAN,GS8DM,IZxBV,CAAA,UYwBU,CAAA,EAAC,CZxBX,GAAP,UAAsB,OAAtB,EAA6B;AYwBP,AZvBpB,AGvCoB,QHuChB,AGvCgB,KAAK,CHuCf,CGvCiB,EHuCd,EYuBO,CAAC,CAAC,IZvBD,CYuBD,AZvBE,CYuBM,MZvBC,CYuBT,AZvBU,CYuBM,KAAI,CAAC,CZvBnB,CAAiB,IYuBnB,CZvBE,CAAuB,GYuBO,CAAC,CAAjC,EZvBgC,CAAC,QAAR,CAAiB,WAAjB,CAA6B,GAA7B,IAAoC,CAA3D,EAA8D,KAA9D,CAAoE,GAApE,EAAyE,CAAzE,CAAD,CAArB;AYuBsD,AZtBtD,AGxCS,OAAP,IS6DwB,AZrBnB,MAAP;AYuBM,AZtBP,AGxCE,GHqCI,EG7CK,EAQP,MARO,CAQA,MS8DM,IT9DL,IAAD,EAAO,CAAP,EAAQ,GS8DF,CAAA,EAAC;AAAI,AT7DnB,MAAA,IAAI,CAAC,CAAC,CAAC,GAAH,CAAJ,ES6DmB,CAAC,AT7DN,CS6DO,AT7DN,CAAC,KAAhB,GS6DmB,IAAe,CAAC,CAAC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAwB,KAAI,CAAC,MAA7B,KAAwC,CAAC,CAAxD;AAAyD,AZrBlF,AGvCM,SHuCN,EYmB8B,ET1DjB,IAAP,aHuCN;AYsBU,AZ1GV,AG8CK,CH9CL,EAAA,EGmCc,EAWP,EAXO,CAAV,CAF6B,CAe7B,MS0Dc,cAAA,CAAA,EAAC;AAAI,mBAAA,CAAC,CAAC,SAAF,IAAe,CAAC,CAAC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAwB,KAAI,CAAC,MAA7B,KAAwC,CAAC,CAAxD;AAAyD,AZ1GnE,AGiDT,IAAA,GHjDS,AGiDN,CHjDM,AGiDL,GSsDsB,ETtDvB,CAAH,GAAa,GAAG,CAAC,KAAD,CAAH,CAAW,CHjDf,GAAA,CGiDI,CAAiB,IAAjB,EAAuB,GAAvB,CAA2B,SHjD/B,CGiD+B,CAAA,EAAC;AS0DnC,ATzDJ,UAAG,CAAC,CAAC,OAAF,CAAU,GSyDI,ATzDd,KAAkB,CAAC,CAAtB,EAAyB,USyDR,CAAA,EAAC;AAAI,ATxDpB,eAAO,ISwDa,CAAC,CAAC,SAAF,IAAe,CAAC,CAAC,OAAF,CAAU,SAAV,EAAqB,OAArB,CAA6B,KAAI,CAAC,MAAlC,KAA6C,CAAC,CAA7D;AAA8D,ATxD1E,UAAA,CSoDc,ITpDT,EAAE,CAAR;ASyDL,ATzDgB,UAAA,IAAI,EAAE,CAAjB,OSyDS,oBAAA,CAAA,EAAC;AAAI,ATzDM,UAAA,MAAM,EAAE,CSyDd,CAAC,CAAC,SAAF,IAAe,CAAC,CAAC,cAAF,CAAiB,OAAjB,CAAyB,KAAI,CAAC,MAA9B,KAAyC,CAAC,CAAzD;AAA0D,ATzDxE,SAAP;ASoDsB,ATnDvB,SSmDC;AAQA,QAAA,MAAM,GAAG,MAAM,CAAC,GAAP,CAAW,UAAA,CAAA,EAAC;AACnB,AT3DJ,MAAA,CAAC,GS2DG,AT3DA,CS2DC,AT3DA,CS2DC,AT3DA,KAAF,CAAQ,CAAC,CAAC,CS2DV,GAAc,GT3DN,CAAU,CS2DlB,ET3DQ,IAAiB,CAAzB,CAAJ;AACA,UAAI,GAAG,GAAG,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAV;AS2DI,AT1DJ,UAAI,IS0DG,CT1DE,GAAG,CS0DD,CAAC,CT1DG,CAAC,CAAD,CAAf,ES0DO,CAAY,IAAZ,GAAmB,MAAnB,IAA6B,CAAhC,EAAmC;AACjC,AT1DN,UAAI,ES0DE,CAAC,CAAC,AT1DA,GAAG,GAAG,CAAC,CAAD,CS0DR,AT1DK,CAAO,ES0DE,GT1DT,CAAa,CS0DlB,AT1DK,EAAgB,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,GAAgB,CAAhC,CAAX;AS2DK,AT1DL,WSwDI,ETxDG,IS0DG,IAAG,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,MAA7B,CAAoC,UAAA,GAAA,EAAG;AAAI,AT1DhD,QAAA,KAAK,EAAE,IS0DyC,CT1DjD,IS0DqD,CAAC,cAAL,CAAoB,GAApB,EAAyB,OAAzB;AAAgC,AT1DlE,QAAA,GS0DT,CT1Da,CS0DgE,CT1D9D,GS0Df,CAAkF,AT1DxF,US0DwF,GAAA,EAAG;AAAI,AT1DpE,QAAA,MAAM,EAAE,GS0D4D,CT1DxD,CAAC,OAAL,CAAa,KS0D8D,CAAC,AT1D5E,GS0D2E,CAAf,CAAqB,AT1DzD,CS0DoC,CAAA;AAAuB,AT1DtH,OAAP,IS0Da,CAAH,EAAsH;AAC1H,AT1DP,KATY,CAAb,MSmEQ,CAAC,CAAC,SAAF,GAAc,IAAd;AACD,ATzDP,IAAA,GAAG,CAAC,MAAJ,GAAa,GAAG,CAAC,IAAD,CAAH,IAAa,GAAG,CAAC,IAAD,CAAH,CAAU,IAAV,GAAiB,MAAjB,GAA0B,CAApD;AAEA,IAAA,GAAG,CAAC,iBAAJ,GAAwB,GAAG,CAAC,KAAD,CAAH,IAAc,IAAI,IAAJ,CAAS,GAAG,CAAC,KAAD,CAAZ,CAAd,IAAsC,IAAI,IAAJ,CAAS,GAAG,CAAC,KAAD,CAAZ,EAAqB,OAArB,KAAiC,GAAG,CAAC,OAAJ,EAA/F;ASyDM,ATvDN,IAAA,GAAG,CAAC,SSuDS,CAAP,ATvDN,GAAiB,gBAAgB,CAAC,gBAAjB,CAAkC,GAAG,CAAC,SAAD,CAArC,EAAkD,GAAlD,CAAjB,CA/B6B,CAiC7B;ASsDK,SATQ,CAAT;AAUA,ATtDJ,IAAA,GAAG,CAAC,OSsDO,ITtDX,ESsDI,CTtDc,KAAK,CAAC,MAAxB;ASuDG,ATtDH,WAAO,GAAP;AS8BU,AT7BX,GApCM,ES+CW;AA4ChB,IAAA,OAAO,EAAE;AACP,ATtDJ,EAAA,ISsDI,MAAM,EAAE,aTtDZ,CAAA,ISsDY,KTtDZ,CAAA,UAAA,GAAA,UAAW,GAAX,EAAwB,GAAxB,EAAiC;ASuD3B,ATtDJ,QAAG,GAAG,ESsDG,ETtDC,CAAV,CSsDI,CTtDS,ESsDG,eAAe,CAAC,MAAhB,EAAZ;AACA,ATtDF,YAAM,CSsDC,MTtDP,ESsDE,GAAgB,kBAAkB,CAAC,eAAnB,EAAhB;AACD,ATtDF,KAH8B,CAI/B,CSiDS;AAKP,MAAA,qBAAqB,EAAE,iCAAA;AACrB,QAAA,kBAAkB,CAAC,kBAAnB,CAAsC,KAAK,QAA3C,EAAqD,gBAArD;AACD,ATvDH,OSgDS,CThDL,KAAK,GAAG,KAAK,eAAL,CAAqB,QAArB,CAA8B,GAA9B,CAAZ;ASwDE,ATvDF,MSuDE,EAAE,ATvDA,CAAC,CSuDD,ETvDI,USuDH,IAAD,EAAK,STvDwB,CAAC,OAA1B,CAAkC,KAAlC,EAAyC,GAAzC,CAAR;ASwDI,ATvDJ,WAAO,CAAP,GSuDW,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,IAAjB,CAAsB,MAAtB,CAAP;AACD,ATvDJ,GARD,ISqDW;AAWP,MAAA,UAAU,EAAV,oBAAW,aAAX,EAAuC;AACrC,ATvDN,EAAA,MSuDM,QAAQ,CAAC,UTvDf,CAAA,SAAA,CAAA,GSuDM,CAAkC,ETvDxC,GAAA,ESuDM,CAA0C,OTvDzC,KAAP,CSuDM,CTvDgC,CSuDyB,CTvD/D,EAA4E,aSuDtE;AACD,ATvDH,OS0CS,CT1CL,IAAI,GAAG,oOASb,IATa,EAAX;ASwDE,AT7CF,MS6CE,GT7CG,KS6CK,EAAR,QT7CF,CAAqB,SS6CV,ET7CX,CAAiC,CS6C/B,EAAqB,QAArB,EAA6B;AAC3B,AT9C8B,MAAA,KAAK,CS8C/B,CT9CiC,GS8C7B,ET9CkC,CS8C/B,AT9CgC,KAAd,GS8CV,CAAC,aAAT,CAAuB,QAAvB,EAAiC,KAAjC,CAAuC,IAAvC,EAAX;AACA,AT/CkD,MAAA,ES+ClD,ET/CsD,EAAE,IS+ChD,CAAC,qBAAT,CAA+B,MAA/B,CAAsC,IAAtC,EAA4C,IAA5C,EAAkD,gBAAlD;AACD,AThD8B,KAAjC,ES+BS,AT/B0D,UAAC,GAAD,EAAM,GAAN,EAAS;ASiD1E,AThDA,MSgDA,IThDG,GAAH,EAAQ,CSgDE,EAAV,oBAAW,MAAX,EAAyB;AACvB,AThDA,QSgDA,AThDA,EAAE,CAAC,GAAD,CAAF,CSgDQ,CAAC,sBAAT,CAAgC,MAAhC,CAAuC,MAAvC,EAA+C,gBAA/C;AACD,AThDC;AS4BK,AT3BN;ASjBa,GAAR,CAAV;AAoED,ATlDK,MAAA,EAAE,CAAC,IAAD,EAAO,GAAG,CAAC,MAAX,CAAF;AACD,KAND;AAOD,GAnBD;;AAqBF,SAAA,yBAAA;AA7EA,CAAA,EAAA;;AAAa,OAAA,CAAA,yBAAA,GAAA,yBAAA","file":"index.js","sourceRoot":"../../../src","sourcesContent":["import {IssueRepository} from './IssueRepository'\ndeclare var GitHub: any;\n\nexport class IssueRepositoryImpl implements IssueRepository {\n  private issueMap;// cache\n  private gh: any;\n  private issues: any;\n  constructor(\n    githubToken: string, \n    owner: string, \n    repo: string\n  ) {\n    this.gh = new GitHub({token: githubToken});\n    this.issues = this.gh.getIssues(owner, repo)\n  }\n  refresh(cb: (err?, list?: Array<any>)=>void) {\n    this.issues.listIssues({state: 'all'}, (error, list) => {\n      if(error) {\n        cb(error, null);\n        return;\n        // alert(error);\n        // throw error;\n      }\n      this.issueMap = {};\n      list.forEach(v => this.setIssue(v))\n      console.log(list);\n      return cb(null, list);\n    });\n  }\n\n  private setIssue(issueObj) {\n    this.issueMap[issueObj.number] = issueObj;\n  }\n\n  private cb(cb, err, obj) {\n    if(err) {\n      cb(err);\n    }\n    this.setIssue(obj);\n    cb(null, obj);\n  }\n\n  getIssue(issueNumber: number): any {\n    return this.issueMap[issueNumber];\n  }\n\n  updateTitle(issueNumber: number, title: string, callback: (err, obj) => any) {\n    this.issues.editIssue(issueNumber, {title: title}, (err, obj) => this.cb(callback, err, obj)) \n  }\n\n  updateBody(issueNumber: number, body: string, callback: (err, obj) => any) {\n    this.issues.editIssue(issueNumber, {body: body}, (err, obj) => this.cb(callback, err, obj)) \n  }\n\n  createIssue(issue: {title: string, body: string}, callback: (err, obj) => any) {\n    this.issues.createIssue(issue, (err, obj) => this.cb(callback, err, obj));\n  }\n}","import {IssueRepository} from '../../domain/github/IssueRepository'\nexport class IssueRepositoryDummy implements IssueRepository {\n  private issueNumberSeq = 1000;\n  private map = {};\n  constructor(readonly taskRootIssueNumber: number) {\n\n  }\n  refresh(callback: (err?, list?: Array<any>)=>void) {\n    setTimeout(() => callback(), 100);\n  }\n  getIssue(issueNumber: number): any {\n    if(!this.map[issueNumber]) {\n      if(issueNumber == this.taskRootIssueNumber) {\n        this.map[issueNumber] = { body: text }\n      } else if(issueNumber == 5) {\n        this.map[issueNumber] = { body: body_5_done }\n      } else if(issueNumber == 27) {\n        this.map[issueNumber] = { body: body27 }\n      } else {\n        this.map[issueNumber] = { body: body26 };\n      }\n      \n    }\n    return this.map[issueNumber];\n  }\n  updateTitle(issueNumber: number, title: string, callback: (err?, obj?) => any) {\n\n  }\n  updateBody(issueNumber: number, body: string, callback: (err?, obj?) => any) {\n    this.map[issueNumber].body = body;\n    setTimeout(() => callback(null, this.map[issueNumber]), 100);\n  }\n  createIssue(issue: {title: string, body: string}, callback: (err?, obj?) => any) {\n    this.issueNumberSeq++;\n    this.map[this.issueNumberSeq] = {\n      number: this.issueNumberSeq,\n      title: issue.title,\n      body: issue.body\n    };\n    setTimeout(() => callback(null, this.map[this.issueNumberSeq]), 100);\n    \n  }\n}\n\nvar text = `\n- 学業\n  - 宿題\n    - [5月分](/26)\n    - 6月分\n- 遊び\n  - [日本旅行](/5)\n  - [世界一周](/27)\n`.trim()\n\nvar body26 = `\n### 担当: すずき\n### 関係者: さとう\n### DONEの定義: 終わらす\n### マイルストーン\n2020/06/06 始まりの儀\n7/9 終わりの儀\n### 開始日: 2020/05/11\n### 終了日: 2020/05/29\n### 内容\n5/28にやる\n頑張る\n### リンク:\n- [yahoo](http://www.yahoo.co.jp)\n`.trim();\n\nvar body27 = `\n### 担当: すずき\n### 関係者: さとう\n### DONEの定義: いつか\n### マイルストーン: \n### 開始日: 2021/05/11\n### 終了日: 2021/05/29\n### 内容\n世界一周する\n頑張る\n### リンク:\n`.trim();\n\n\nvar body_5_done = `\n### 担当: たなか\n### 関係者:\n### DONEの定義: 行く\n### マイルストーン: \n### 開始日: 2020/05/11\n### 終了日: 2020/05/29\n### 内容\n全国一周\n### リンク:\n### 完了: 2020/05/29\n`.trim();","import {CommentRepository} from '../../domain/github/CommentRepository'\ndeclare var GitHub: any;\n// var gh = new GitHub({token: config.githubToken});\n// const issue = gh.getIssues(config.owner, config.repo)\n// var root = null;\n\n// function createRoot(issueObject) {\n//   return issueObject;\n// }\n\n// class ReefTask {\n  \n// }\n\n\n\nexport class CommentRepositoryImpl implements CommentRepository {\n  private issueCommentsMap = {};\n  private gh: any;\n  private issues: any;\n  private repo: any;\n  constructor(\n    githubToken: string, \n    owner: string, \n    repo: string\n  ) {\n    this.gh = new GitHub({token: githubToken});\n    this.issues = this.gh.getIssues(owner, repo)\n    this.repo = this.gh.getRepo(owner, repo);\n  }\n  getCommentsForIssue(issueNumber: number) {\n    if(!this.issueCommentsMap[issueNumber]) {\n      return [];\n    }\n    return Object.values(this.issueCommentsMap[issueNumber]);\n  }\n  refreshNewestUpdateComments(since: Date | null, callback: (err?, list?: any) => any) {\n    var loopCount = 0;\n    var lastId = -1;\n    var loop = (err, list) => {\n      \n      if(err) {\n        callback(err);\n        return;\n      }\n      loopCount++;\n      console.log(loopCount);\n      console.log(list);\n      if(loopCount > 30) throw '無限'\n\n      if(!list) {\n        this.repo.listComments({sort: 'updated', direction: 'asc', since: since}, loop)\n      } else if(list.length > 0) {\n        this.updateCache(list);\n        if(lastId != list[list.length - 1].id) {\n          lastId = list[list.length - 1].id;\n          this.repo.listComments({sort: 'updated', direction: 'asc', since: list[list.length - 1].updated_at}, loop)\n        } else {\n          callback(err, this.issueCommentsMap)\n        }\n        \n      } else {\n        callback(err, this.issueCommentsMap)\n      }\n    }\n    loop(null, null);\n  }\n  create(issueNumber: number, body: string, callback: (err?, obj?) => void) {\n    this.issues.createIssueComment(issueNumber, body, (err?, obj?) => {\n      if(err) {\n        callback(err);\n        return;\n      }\n      this.issueCommentsMap[issueNumber][obj.id] = obj;\n      callback(null, obj);\n    })\n  }\n  update(issueNumber: number, id: number, body: string, callback: (err?, obj?) => void) {\n    this.issues.editIssueComment(id, body, (err, obj) => {\n      if(err) {\n        callback(err);\n        return;\n      }\n      this.issueCommentsMap[issueNumber][id] = obj;\n      callback(null, obj);\n    })\n  }\n  private updateCache(comments: any[]) {\n    comments.forEach(c => {\n      var issueNumber = CommentRepositoryImpl.getIssueNumber(c);\n      if(!this.issueCommentsMap[issueNumber]) {\n        this.issueCommentsMap[issueNumber] = {};\n      }\n      this.issueCommentsMap[issueNumber][c.id] = c;\n    })\n  }\n  static getIssueNumber(comment) {\n    var result = parseInt(comment.html_url.slice(comment.html_url.lastIndexOf('/') + 1).split('#')[0]);\n    return result;\n  }\n}","import {CommentRepository} from '../../domain/github/CommentRepository'\ndeclare var GitHub: any;\n// var gh = new GitHub({token: config.githubToken});\n// const issue = gh.getIssues(config.owner, config.repo)\n// var root = null;\n\n// function createRoot(issueObject) {\n//   return issueObject;\n// }\n\n// class ReefTask {\n  \n// }\n\n\n\nexport class CommentRepositoryDummy implements CommentRepository {\n  private issueCommentsMap = {}\n  constructor() {\n\n  }\n\n  getCommentsForIssue(issueNumber: number) {\n    if(!this.issueCommentsMap[issueNumber]) {\n      this.issueCommentsMap[issueNumber] = [{id: 0, body: '2020/1/1\\n---\\nあああ'}]\n    }\n    return this.issueCommentsMap[issueNumber];\n  }\n  refreshNewestUpdateComments(since: Date | null, callback: (err?, list?: any[]) => any) {\n    setTimeout(() => callback(null, []), 300);\n  }\n  update(issueNumber: number, id: number, body: string, callback: (err?, obj?) => void) {\n    this.issueCommentsMap[issueNumber][id].body = body;\n    setTimeout(() => callback(null, this.issueCommentsMap[issueNumber][id]), 100);\n  }\n  create(issueNumber: number, body: string, callback: (err?, obj?) => void) {\n    var id = this.issueCommentsMap[issueNumber].length;\n    this.issueCommentsMap[issueNumber].push({id: id, body: body})\n    // console.log(this.issueCommentsMap[issueNumber]);\n    setTimeout(() => callback(null, this.issueCommentsMap[issueNumber][this.issueCommentsMap[issueNumber].length - 1]), 100);\n  }\n}","export type TaskSummary = {\n  issueNumber: number,\n  isDone: boolean,\n  isBeforeStartDate: boolean,\n  milestones: Milestones\n}\n\nexport class Milestone {\n  constructor(\n    public dateInTask: DateInTask, \n    public title: string, \n    public isDone: boolean,\n    private now: Date\n  ) {\n  }\n  get dateText(): string {\n    return this.dateInTask.text;\n  }\n  isWithin(pastDate: Date): boolean {\n    if(this.isDone) {\n      return false;\n    }\n    return this.dateInTask.isWithin(pastDate);\n  }\n  get isWithinOneWeek(): boolean {\n    return this.isWithin(new Date(this.now.getTime() + 7 * 24 * 60 * 60 * 1000));\n  }\n}\n\nexport class Milestones {\n  constructor(readonly list: Milestone[]) {\n  }\n}\n\nexport class DateInTask {\n  constructor(public text: string, public date: Date) {}\n  isWithin(pastDate: Date): boolean {\n    return this.date.getTime() <= pastDate.getTime();\n  }\n  static create(dateText: string, now: Date): DateInTask {\n    var parts = dateText.split('/').map(v => parseInt(v));\n    if(parts.length == 2) {// ex 6/23\n      parts = [(parts[0] <= 3 ? now.getFullYear() + 1: now.getFullYear()), ...parts]\n    }\n    var date = new Date(parts.join('/'));\n    return new DateInTask(dateText, date);\n  }\n}\n\n\n\nexport interface TaskSummaryRepository {\n  getSummary(num: number, now: Date): TaskSummary;\n  create(event: CreateTaskSummaryEvent, cb: (err?, issueNumber?: number)=>void)\n}\nexport class CreateTaskSummaryEvent {\n  constructor(readonly title: string) {}\n}","import { TaskSummary, DateInTask, Milestone, Milestones, CreateTaskSummaryEvent, TaskSummaryRepository } from \"../../domain/TaskSummary\";\nimport { IssueRepository } from \"../../domain/github/IssueRepository\";\nexport class DateInTaskFactory {\n  static create(dateText: string, now: Date): DateInTask {\n    var parts = dateText.split('/').map(v => parseInt(v));\n    if(parts.length == 2) {// ex 6/23\n      parts = [(parts[0] <= 3 ? now.getFullYear() + 1: now.getFullYear()), ...parts]\n    }\n    var date = new Date(parts.join('/'));\n    return new DateInTask(dateText, date);\n  }\n}\n\nexport class MilestoneFactory {\n  // パターン\n  // 2020/1/1 タスク名\n  // 2020/1/1　タスク名全角区切り\n  // 1/1 タスク名\n  // タスク名 ほげ\n  // 1/末 タスク名\n  static create(text: string, now: Date): Milestone {\n    var splitKey = ' '\n    if(text.indexOf(splitKey) == -1) {\n      splitKey = '　';\n      if(text.indexOf(splitKey) == -1) {\n        // throw `マイルストーンがパースできない ${text}`\n        var title = text;\n        var isDone = ['done', '完了', '了'].some(key => title.indexOf(`[${key}]`) != -1);\n        return new Milestone(new DateInTask('', new Date('2999/12/31')), title, isDone, now);\n      }\n    }\n    var dateText = text.slice(0, text.indexOf(splitKey));\n    var title = text.slice(text.indexOf(splitKey)).trim();\n    var isDone = ['done', '完了', '了'].some(key => title.indexOf(`[${key}]`) != -1);\n    return new Milestone(DateInTask.create(dateText, now), title, isDone, now);    \n  }\n  static createMilestones(text: string, now: Date): Milestones {\n    return new Milestones(text.split('\\n').map(v => v.trim()).filter(v => v.length > 0).map(v => MilestoneFactory.create(v, now)))\n  }\n}\n\nexport class TaskSummaryRepositoryImpl implements TaskSummaryRepository {\n  constructor(private issueRepository: IssueRepository) {\n}\n\n  /**\n   * issueをsummaryに変換\n   * @param issue \n   */\n  static convert(issue, now: Date): TaskSummary {\n    // bodyをパース\n    var obj = issue.body.split('### ').slice(1).map(v => {\n      var first = v.split('\\n')[0];\n      var key = first.trim();\n      if(first.indexOf(':') != -1) {\n        key = first.split(':')[0].trim();\n      }\n      var value = v.slice(key.length + 1).trim();\n      return {key: key, value: value}\n    }).reduce((memo, v) => {\n      memo[v.key] = v.value;\n      return memo;\n    }, {})\n\n    // md形式のリンクリストをパース\n    obj['リンク'] = obj['リンク'].split('\\n').map(v => {\n      if(v.indexOf('[') == -1) {\n        return {title: v, path: v, isHttp: false};\n      }\n      v = v.slice(v.indexOf('[') + 1);\n      var ary = v.split('](');\n      var title = ary[0];\n      var path = ary[1].slice(0, ary[1].length - 1);\n      return {title: title, path: path, isHttp: path.indexOf('http') == 0};\n    })\n\n    obj.isDone = obj['完了'] && obj['完了'].trim().length > 0;\n\n    obj.isBeforeStartDate = obj['開始日'] && new Date(obj['開始日']) && new Date(obj['開始日']).getTime() > now.getTime()\n\n    obj.milestones = MilestoneFactory.createMilestones(obj['マイルストーン'], now)\n\n    // issue番号\n    obj.issueNumber = issue.number\n    return obj;\n  }\n\n  getSummary(num: number, now: Date): TaskSummary {\n    if(num <= 0) {\n      throw '不正な番号'\n    }\n    // 担当,関係者,完了,DONEの定義,マイルストーン,開始日,終了日,内容,リンク\n    var issue = this.issueRepository.getIssue(num);\n    var s = TaskSummaryRepositoryImpl.convert(issue, now);\n    return s;\n  }\n\n  create(event: CreateTaskSummaryEvent, cb: (err?, issueNumber?: number)=>void) {\n    var body = `\n### 担当: \n### 関係者: \n### DONEの定義: \n### マイルストーン: \n### 開始日: \n### 終了日: \n### 内容: \n### リンク:\n`.trim();\n\n    this.issueRepository.createIssue({title: event.title, body: body}, (err, obj) => {\n      if(err) {\n        cb(err);\n        return;\n      }\n      cb(null, obj.number)\n    })\n  }\n\n}","import { TaskId } from \"./TaskId\";\n\nexport class Note {\n  constructor(readonly taskId: TaskId, readonly id: number, readonly date: Date, readonly body: string) {}\n  updateBody(body: string): UpdateNoteEvent {\n    return new UpdateNoteEvent(this.taskId, this.id, this.date, body);\n  }\n}\nexport class Notes {\n  constructor(readonly taskId: TaskId, readonly list: Note[]) {}\n  get latestNote(): Note | null {\n    return this.list.length > 0 ? this.list[0] : null;\n  }\n  createEmptyNote(now: Date): CreateEmptyNoteEvent {\n    var date = new Date(now);\n    date.setDate(date.getDay() == 0 ? date.getDate() - 6 : date.getDate() - date.getDay() + 1);// 月曜日\n    date = new Date(date.toDateString());\n    if(this.latestNote && this.latestNote.date.getTime() == date.getTime()) {\n      throw '既に最新のノートがある';\n    }\n\n    return new CreateEmptyNoteEvent(this.taskId, date);\n  }\n}\n\nexport interface TaskNoteRepository {\n  getNotes(taskId: TaskId): Notes;\n  update(event: UpdateNoteEvent, cb: (err)=>void)\n  createEmptyNote(event: CreateEmptyNoteEvent, cb: (err)=>void);\n}\n\nexport class UpdateNoteEvent {\n  constructor(readonly taskId: TaskId, readonly id: number, readonly date: Date, readonly body: string) {}\n}\n\nexport class CreateEmptyNoteEvent {\n  constructor(readonly taskId: TaskId, readonly date: Date) {}\n}\n","import { CommentRepository } from \"../../domain/github/CommentRepository\";\nimport { Note, Notes, TaskNoteRepository, UpdateNoteEvent, CreateEmptyNoteEvent } from \"../../domain/TaskNote\";\nimport { TaskId } from \"../../domain/TaskId\";\n\nexport class TaskNoteRepositoryImpl implements TaskNoteRepository {\n  constructor(private commentRepository: CommentRepository) {\n\n  }\n\n  static convert(id, body): {id, date: string, body: string, commentBody: string} | null {\n    if(body.indexOf('---') == -1) {\n      return null;\n    }\n    return {\n      id: id,\n      date: body.slice(0, body.indexOf('---')).trim(),\n      body: body.slice(body.indexOf('---') + '---'.length).trim(),\n      commentBody: body\n    };\n  }\n  static createCommentText(date: Date, body: string) {\n    return `${date.toLocaleDateString()}\\n---\\n${body.trim()}`;\n  }\n\n  getNotes(taskId: TaskId): Notes {\n    if(taskId <= 0) {\n      throw '不正な番号'\n    }\n    // 担当,関係者,完了,DONEの定義,マイルストーン,開始日,終了日,内容,リンク\n    var notes: Note[] = this.commentRepository.getCommentsForIssue(taskId)\n      .map(v => TaskNoteRepositoryImpl.convert(v.id, v.body))\n      .filter(v => v)\n      .map(v => new Note(taskId, v.id, new Date(v.date), v.body))\n      .sort((a, b) => {\n        a = a.date.getTime();\n        b = b.date.getTime();\n        if(a == b) return 0;\n        if(a > b) return -1;\n        if(a < b) return 1;\n      });// exclude null\n    // return [{date: '2020/1/1', body: 'hoge'}];\n\n    return new Notes(taskId, notes);\n  }\n  \n  update(event: UpdateNoteEvent, cb: (err)=>void) {\n    this.commentRepository.update(event.taskId, event.id, TaskNoteRepositoryImpl.createCommentText(event.date, event.body), (err, obj) => {\n      cb(err);\n    })\n  }\n\n  createEmptyNote(event: CreateEmptyNoteEvent, cb: (err)=>void) {\n    this.commentRepository.create(event.taskId, TaskNoteRepositoryImpl.createCommentText(event.date, ''), (err, obj) => {\n      cb(err);\n    })\n  }\n}","import { IssueRepository } from \"./github/IssueRepository\";\nimport { TaskId } from \"./TaskId\";\n\nexport class TreeNode<T> {\n  constructor(readonly value: T, readonly children: TreeNode<T>[] = []) {}\n  get hasChildren(): boolean {\n    return this.children.length > 0;\n  }\n  get lastChild(): TreeNode<T> {\n    if(!this.hasChildren) throw 'no children';\n    return this.children[this.children.length - 1];\n  }\n  addChild(node: TreeNode<T>) {\n    this.children.push(node);\n  }\n}\n\nexport class TaskTitleAndId {\n  constructor(readonly title: string, readonly taskId?: TaskId) {}\n}\n\nfunction convertToTree(text): TreeNode<TaskTitleAndId> {\n  var root = new TreeNode<TaskTitleAndId>(new TaskTitleAndId('_root'));\n  var lastNodes: TreeNode<TaskTitleAndId>[] = [root];\n  text.trim().split('\\n').forEach((line: string) => {\n    var nest = line.split('-')[0].length / 2 + 1;//1 origin\n    var node = new TreeNode<TaskTitleAndId>(textToTaskTitleAndId(line.trim().slice(2)));\n    lastNodes[nest] = node;\n    lastNodes[nest - 1].addChild(node);\n  });\n  return root;\n}\n\nfunction textToTaskTitleAndId(text) {\n  if(text.indexOf('[') != 0) {\n    return new TaskTitleAndId(text);\n  }\n  var ary = text.split('/');\n  var taskId = parseInt(ary[ary.length - 1].split(')')[0]) as TaskId;\n  var title = text.split(']')[0].slice(1);\n  return new TaskTitleAndId(title, taskId)\n}\n\n\nexport class TaskTreeRepository {\n  constructor(private taskRootIssueNumber: number, private issueRepository: IssueRepository) {\n  }\n\n  getTaskTree(): TreeNode<TaskTitleAndId> {\n    var taskRootText = this.issueRepository.getIssue(this.taskRootIssueNumber).body\n    return convertToTree(taskRootText);\n  }\n  getTaskRootBody() {\n    return this.issueRepository.getIssue(this.taskRootIssueNumber).body\n  }\n  updateTaskRootBody(taskRootBody, cb:(err?)=>void) {\n    this.issueRepository.updateBody(this.taskRootIssueNumber, taskRootBody, cb);\n  }\n  updateTaskTitleAndId(taskTitleAndId: TaskTitleAndId, cb:(err?)=>void) {\n    var rootBody = this.getTaskRootBody().split(taskTitleAndId.title).join(`[${taskTitleAndId.title}](./${taskTitleAndId.taskId})`)\n    this.updateTaskRootBody(rootBody, cb);\n  }\n}","import { TaskSummary, CreateTaskSummaryEvent } from \"./TaskSummary\"\nimport { TaskId } from \"./TaskId\";\nimport { Note } from \"./TaskNote\";\n\nexport interface TaskIf {\n  title: string;\n  isNode: boolean;\n  isTitleOnly: boolean;\n  isManaged: boolean;\n  nest: string;\n}\n\nexport class NodeTask implements TaskIf {\n  isNode: boolean = true;\n  isTitleOnly: boolean = false;\n  isManaged: boolean = false;\n  status = 'opened';\n\n  constructor(\n    public title: string,\n    public children: Array<NodeTask | TitleOnlyTask | ManagedTask>,\n    public nest: string\n  ) {}\n}\n\nexport class TitleOnlyTask implements TaskIf {\n  isNode: boolean = false;\n  isTitleOnly: boolean = true;\n  isManaged: boolean = false;\n\n  constructor(\n    public title: string,\n    public nest: string\n  ) {}\n  toMangedTask(): CreateTaskSummaryEvent {\n    return new CreateTaskSummaryEvent(this.title);\n  }\n}\n\nexport class ManagedTask implements TaskIf {\n  readonly isNode: boolean = false;\n  readonly isTitleOnly: boolean = false;\n  readonly isManaged: boolean = true;\n\n  readonly isDone: boolean;\n  readonly isBeforeStartDate: boolean;\n  readonly latestNoteText: string;\n  constructor(\n    readonly taskId: TaskId,\n    readonly title: string,\n    readonly summary: TaskSummary,\n    readonly latestNote: Note | null,\n    public nest: string\n  ) {\n    this.isDone = summary.isDone;\n    this.isBeforeStartDate = summary.isBeforeStartDate;\n    this.latestNoteText = latestNote ? `${latestNote.date}\\n${latestNote.body}` : ''\n  }\n}\n","import { NodeTask, TitleOnlyTask, ManagedTask } from './domain/task';\nimport { TaskSummaryRepository } from './domain/TaskSummary';\nimport { TaskNoteRepository } from './domain/TaskNote';\nimport { TreeNode, TaskTitleAndId, TaskTreeRepository } from './domain/taskroot/TaskTree';\n\nexport class TaskListFactory {\n  constructor(private taskSummaryRepository: TaskSummaryRepository, private taskNoteRepository: TaskNoteRepository, private taskTreeRepository: TaskTreeRepository, private now: Date) { }\n  create(): Array<NodeTask | TitleOnlyTask | ManagedTask> {\n    var tree = this.taskTreeRepository.getTaskTree();\n    return this.flat(this.treeNodeToTask(tree, -1)).slice(1);\n  }\n  private treeNodeToTask(node: TreeNode<TaskTitleAndId>, nestNum: number = 0): NodeTask | TitleOnlyTask | ManagedTask {\n    var title = node.value.title;\n    var nest = `nest${nestNum}`;\n    if (node.value.taskId) { // managed\n      return new ManagedTask(node.value.taskId, title, this.taskSummaryRepository.getSummary(node.value.taskId, this.now), this.taskNoteRepository.getNotes(node.value.taskId).latestNote, nest);\n    }\n    else if (node.hasChildren) {\n      return new NodeTask(title, node.children.map(v => this.treeNodeToTask(v, nestNum + 1)), nest);\n    }\n    else {\n      return new TitleOnlyTask(title, nest);\n    }\n  }\n  private flat(task: NodeTask | TitleOnlyTask | ManagedTask, list: (NodeTask | TitleOnlyTask | ManagedTask)[] = []): Array<NodeTask | TitleOnlyTask | ManagedTask> {\n    list.push(task);\n    if (task.isNode) {\n      (task as NodeTask).children.forEach(v => this.flat(v, list));\n    }\n    return list;\n  }\n}\n","import { TitleOnlyTask } from '../domain/task';\nimport { TaskSummaryRepository } from '../domain/TaskSummary';\nimport { TaskId } from '../domain/TaskId';\nimport { TaskTreeRepository, TaskTitleAndId } from '../domain/TaskTree';\nexport class TitleOnlyToMangedService {\n  constructor(\n    private taskSummaryRepository: TaskSummaryRepository, \n    private taskTreeRepository: TaskTreeRepository\n  ) {}\n  \n  convert(titleOnlyTask: TitleOnlyTask, cb: (err?) => void) {\n    var event = titleOnlyTask.toMangedTask();\n    this.taskSummaryRepository.create(event, (err, issueNumber) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.taskTreeRepository.updateTaskTitleAndId(new TaskTitleAndId(event.title, issueNumber as TaskId), cb);\n    });\n  }\n}\n","import { Note, TaskNoteRepository } from '../domain/TaskNote';\n\nexport class UpdateNoteBodyService {\n  constructor(private taskNoteRepository: TaskNoteRepository) { }\n  update(note: Note, body: string, cb: (err?) => void) {\n    var event = note.updateBody(body);\n    this.taskNoteRepository.update(event, cb);\n  }\n}\n","import { TaskId } from '../domain/TaskId';\nimport { TaskNoteRepository } from '../domain/TaskNote';\nexport class CreateEmptyNoteService {\n  constructor(\n    private taskNoteRepository: TaskNoteRepository, \n    private now: Date\n  ) { }\n  \n  create(taskId: TaskId, cb: (err?) => void) {\n    var event = this.taskNoteRepository.getNotes(taskId).createEmptyNote(this.now);\n    this.taskNoteRepository.createEmptyNote(event, cb);\n  }\n}\n","/// <reference path=\"./sugar.d.ts\" />\nimport {NodeTask, TaskIf, TitleOnlyTask} from './domain/task'\nimport {IssueRepository} from './domain/github/IssueRepository'\nimport {IssueRepositoryImpl} from './infra/github/IssueRepositoryImpl'\nimport {IssueRepositoryDummy} from './infra/github/IssueRepositoryDummy'\nimport {CommentRepository} from './domain/github/CommentRepository'\nimport {CommentRepositoryImpl} from './infra/github/CommentRepositoryImpl'\nimport {CommentRepositoryDummy} from './infra/github/CommentRepositoryDummy'\nimport { TaskSummaryRepository, TaskSummary } from './domain/TaskSummary'\nimport { TaskSummaryRepositoryImpl } from './infra/tasksummary/TaskSummaryImpl'\nimport { TaskId } from './domain/TaskId'\nimport { Note, Notes, TaskNoteRepository } from './domain/TaskNote'\nimport { TaskNoteRepositoryImpl } from './infra/tasknote/TaskNoteRepositoryImpl'\nimport { TaskTreeRepository } from './domain/TaskTree'\nimport { TaskListFactory } from './TaskListFactory'\nimport { TitleOnlyToMangedService } from './service/TitleOnlyToMangedService'\nimport { UpdateNoteBodyService } from './service/UpdateNoteBodyService'\nimport { CreateEmptyNoteService } from './service/CreateEmptyNoteService'\ndeclare var Vue: any;\ndeclare var config: { \n  githubToken: string, \n  owner: string, \n  repo: string,\n  taskRootIssueNumber: number ,\n  isDevelop:boolean\n}\n\nclass Services {\n  constructor(\n    readonly titleOnlyToMangedService: TitleOnlyToMangedService,\n    readonly updateNoteBodyService: UpdateNoteBodyService,\n    readonly createEmptyNoteService: CreateEmptyNoteService\n  ) {}\n}\n\n\n(() => {\n  var issueRepository: IssueRepository;\n  var commentRepository: CommentRepository;\n  \n  issueRepository = new IssueRepositoryImpl(\n    config.githubToken,\n    config.owner,\n    config.repo\n  );\n  commentRepository = new CommentRepositoryImpl(\n    config.githubToken,\n    config.owner,\n    config.repo\n  );\n  if(config.isDevelop) {\n    issueRepository = new IssueRepositoryDummy(config.taskRootIssueNumber);\n    commentRepository = new CommentRepositoryDummy();\n  }\n\n  const taskSummaryRepository: TaskSummaryRepository = new TaskSummaryRepositoryImpl(issueRepository);\n  const taskNoteRepository: TaskNoteRepository = new TaskNoteRepositoryImpl(commentRepository);\n  const taskTreeRepository: TaskTreeRepository = new TaskTreeRepository(config.taskRootIssueNumber, issueRepository)\n\n  issueRepository.refresh((err) => {\n    if(err) {\n      alert(err);\n      throw err;\n    }\n    commentRepository.refreshNewestUpdateComments(new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), (err, obj) => {\n      if(err) {\n        alert(err);\n        throw err;\n      }\n      setup(\n        taskSummaryRepository, \n        taskNoteRepository, \n        taskTreeRepository,\n        new Date());\n    });\n  })\n})()\n\n\nfunction setup(\n  taskSummaryRepository: TaskSummaryRepository, \n  taskNoteRepository: TaskNoteRepository,\n  taskTreeRepository: TaskTreeRepository,\n  now: Date\n  ) {\n  var taskListFactory = new TaskListFactory(taskSummaryRepository, taskNoteRepository, taskTreeRepository, now);\n  var tasks = taskListFactory.create()\n  var callbackToReload = (err?) => {\n    if(err) throw err;\n    app.reload();\n  }\n  var services = new Services(\n    new TitleOnlyToMangedService(taskSummaryRepository, taskTreeRepository),\n    new UpdateNoteBodyService(taskNoteRepository),\n    new CreateEmptyNoteService(taskNoteRepository, now)\n  )\n  var app = new Vue({\n    el: '#app',\n    data: {\n      message: 'Hello Vue!',\n      list: tasks,\n      rootBody: taskTreeRepository.getTaskRootBody(),\n      filter: '',\n      owner: config.owner,\n      repo: config.repo,\n      issueUrlPrefix: `https://github.com/${config.owner}/${config.repo}/issues`,\n      filterCheckbox: {\n        'title': {label: '件名', checked: true},\n        'assgin': {label: '担当', checked: true},\n        'body': {label: '内容', checked: true},\n        'milestone': {label: 'マイルストーン', checked: true},\n        'latestnote': {label: '最新状況', checked: true}\n      }\n    },\n    computed: {\n      decoratedList: function() {\n        var result = this.list;\n        var filterTargetsForSummary = ['担当', '内容', 'マイルストーン'];\n\n        var fitlerTargetMap = {\n          'title': v => v.title.indexOf(this.filter) != -1,\n          'assgin': v => v.isManaged && v.summary['担当'].indexOf(this.filter) != -1,\n          'body': v => v.isManaged && v.summary['内容'].indexOf(this.filter) != -1,\n          'milestone': v => v.isManaged && v.summary['マイルストーン'].indexOf(this.filter) != -1,\n          'latestnote': v => v.isManaged && v.latestNoteText.indexOf(this.filter) != -1\n        };\n        \n        result = result.map(v => {\n          v.isHilight = false;\n          if(this.filter.trim().length == 0) {\n            v.isHilight = false;\n          }else if(Object.keys(fitlerTargetMap).filter(key => this.filterCheckbox[key].checked).some(key => fitlerTargetMap[key](v))) {\n            v.isHilight = true;\n          }\n\n          return v;\n        })\n        return result;\n      }\n    },\n    methods: {\n      reload: function(){\n        this.list = taskListFactory.create()\n        this.rootBody = taskTreeRepository.getTaskRootBody()\n      },\n      onPressedRootBodyEdit: function() {\n        taskTreeRepository.updateTaskRootBody(this.rootBody, callbackToReload)\n      },\n      br(text) {\n        return text.split('\\n').join('<br>')\n      },\n      createTask(titleOnlyTask: TitleOnlyTask) {\n        services.titleOnlyToMangedService.convert(titleOnlyTask, callbackToReload)\n      },\n      editNote(note: Note, selector) {\n        var body = document.querySelector(selector).value.trim()\n        services.updateNoteBodyService.update(note, body, callbackToReload)\n      },\n      createNote(taskId: TaskId) {\n        services.createEmptyNoteService.create(taskId, callbackToReload)\n      }\n    }\n  })\n\n}\n\n"]}